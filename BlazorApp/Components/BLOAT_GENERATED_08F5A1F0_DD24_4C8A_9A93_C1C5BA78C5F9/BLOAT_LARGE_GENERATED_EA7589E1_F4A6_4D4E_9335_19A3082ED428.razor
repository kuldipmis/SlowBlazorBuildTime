@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_9f604761_056d_44c8_b061_a23463235665_Text())
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9775ebd4_a06b_4ff7_bef2_c63011d0fa5d_GridOnRead"> 
		<GridColumns> 
			<TelerikTabStrip> 
				<TabStripTab> 
					@{ var tabStrip0Data = _cc20567a_f957_47c7_9965_faacf85f3575_GetTabStripData(); }
					@tabStrip0Data
				</TabStripTab> 
				<TabStripTab> 
					@if (_0fb807f4_c5a0_4aaa_ad21_53a32b90707d_buttonVisibilityTest) 
					{
						<TelerikButton OnClick="() => _0fb807f4_c5a0_4aaa_ad21_53a32b90707d_buttonVisibilityTest = !_0fb807f4_c5a0_4aaa_ad21_53a32b90707d_buttonVisibilityTest"> 
							<button>
								This is a test button! 
							</button>
						</TelerikButton> 
					}
				</TabStripTab> 
				<TabStripTab> 
					@{ var tabStrip2Data = _cc20567a_f957_47c7_9965_faacf85f3575_GetTabStripData(); }
					@tabStrip2Data
				</TabStripTab> 
				<TabStripTab> 
					@{ var tabStrip3Data = _cc20567a_f957_47c7_9965_faacf85f3575_GetTabStripData(); }
					@tabStrip3Data
				</TabStripTab> 
				<TabStripTab> 
					@{ var tabStrip4Data = _cc20567a_f957_47c7_9965_faacf85f3575_GetTabStripData(); }
					@tabStrip4Data
				</TabStripTab> 
			</TelerikTabStrip> 
		</GridColumns> 
	</TelerikGrid> 
</a>
<button>
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col3Row1
			</td>
			<td>
				Col4Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
			<td>
				Col3Row2
			</td>
			<td>
				Col4Row2
			</td>
			<td>
				Col1Row3
			</td>
			<td>
				Col2Row3
			</td>
			<td>
				Col3Row3
			</td>
			<td>
				Col4Row3
			</td>
		</tr>
	</table>
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
	</tr>
</table>
<div class="@(Get_731de519_5c25_4e16_8a07_c5ac9eb2cceb_Class())">
	<button>
		This is a test button! 
	</button>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f826226a_daa3_44f1_b084_f9a628948eca_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
	</tr>
</table>
@code { 
	private bool _0fb807f4_c5a0_4aaa_ad21_53a32b90707d_buttonVisibilityTest;
	private string _cc20567a_f957_47c7_9965_faacf85f3575_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _9775ebd4_a06b_4ff7_bef2_c63011d0fa5d_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_9f604761_056d_44c8_b061_a23463235665_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_731de519_5c25_4e16_8a07_c5ac9eb2cceb_Class()
	{
		return "alert alert-info";
	}
	private void _f826226a_daa3_44f1_b084_f9a628948eca_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
