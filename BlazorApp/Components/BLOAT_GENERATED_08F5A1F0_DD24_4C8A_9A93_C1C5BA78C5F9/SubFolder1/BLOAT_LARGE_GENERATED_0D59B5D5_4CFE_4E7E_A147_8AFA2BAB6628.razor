@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2fba16b8_dd51_48b0_86ab_8495eb6cb38e_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2fba16b8_dd51_48b0_86ab_8495eb6cb38e_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_bf343261_111c_4a7d_a4c5_885d9c9feaad_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _2fba16b8_dd51_48b0_86ab_8495eb6cb38e_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_adc56b85_ce94_4629_a337_c0b5462176c7_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3404c3de_120e_439b_9d1b_d475c9c663d1_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_95091e4c_c018_4bf9_86b0_73318633d9f8_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f6e0d6cb_45b1_4f42_b7a0_d19f88ef424e_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _7e38d5ee_f4cb_4f7f_99c2_8fedcf0e80f0_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _7e38d5ee_f4cb_4f7f_99c2_8fedcf0e80f0_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 

	private void _bf343261_111c_4a7d_a4c5_885d9c9feaad_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _2fba16b8_dd51_48b0_86ab_8495eb6cb38e_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_adc56b85_ce94_4629_a337_c0b5462176c7_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_f012d177_ed8e_4ec8_b64b_57b23fc4e241_Class()
	{
		return "alert alert-info";
	}
	private void _3404c3de_120e_439b_9d1b_d475c9c663d1_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_95091e4c_c018_4bf9_86b0_73318633d9f8_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _f6e0d6cb_45b1_4f42_b7a0_d19f88ef424e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _7e38d5ee_f4cb_4f7f_99c2_8fedcf0e80f0_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
