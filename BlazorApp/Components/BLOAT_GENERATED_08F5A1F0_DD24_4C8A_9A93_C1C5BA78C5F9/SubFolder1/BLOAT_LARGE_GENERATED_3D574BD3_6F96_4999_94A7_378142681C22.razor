@using Telerik.Blazor.Components;
@if (_8108b0cf_206c_4aa2_9407_2a4a7ad01fad_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _8108b0cf_206c_4aa2_9407_2a4a7ad01fad_buttonVisibilityTest = !_8108b0cf_206c_4aa2_9407_2a4a7ad01fad_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_71a78725_1d2f_4ec5_8d5a_209ff498c645_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _cf190413_06b2_49bc_853b_943720300c1f_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _cf190413_06b2_49bc_853b_943720300c1f_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_42f6d5e1_5401_4186_906a_d3f10e2a98cc_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_ff8782f1_01c2_421a_a2aa_a9d77265d0d2_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _ff8782f1_01c2_421a_a2aa_a9d77265d0d2_buttonVisibilityTest = !_ff8782f1_01c2_421a_a2aa_a9d77265d0d2_buttonVisibilityTest"> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col1Row2
				</td>
				<td>
					Col2Row2
				</td>
				<td>
					Col3Row2
				</td>
				<td>
					Col1Row3
				</td>
				<td>
					Col2Row3
				</td>
				<td>
					Col3Row3
				</td>
			</tr>
		</table>
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_233f5602_2ee7_4ac6_a396_12236c9eb454_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_233f5602_2ee7_4ac6_a396_12236c9eb454_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0cb134ee_7a4d_4ff1_8713_44441b11a4d2_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _0cb134ee_7a4d_4ff1_8713_44441b11a4d2_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _0cb134ee_7a4d_4ff1_8713_44441b11a4d2_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_ed1d6a83_0f28_4854_bc7b_ef29aa094474_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_96aee04c_3fa4_4580_9311_89b36ca072a9_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip2Data = _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData(); }
				@tabStrip2Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip3Data = _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData(); }
				@tabStrip3Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip4Data = _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData(); }
				@tabStrip4Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _8108b0cf_206c_4aa2_9407_2a4a7ad01fad_buttonVisibilityTest;
	private bool _ff8782f1_01c2_421a_a2aa_a9d77265d0d2_buttonVisibilityTest;
	private string _cf190413_06b2_49bc_853b_943720300c1f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _71a78725_1d2f_4ec5_8d5a_209ff498c645_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _42f6d5e1_5401_4186_906a_d3f10e2a98cc_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _233f5602_2ee7_4ac6_a396_12236c9eb454_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _0cb134ee_7a4d_4ff1_8713_44441b11a4d2_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_ed1d6a83_0f28_4854_bc7b_ef29aa094474_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _0471d177_5772_4848_9d6a_c37ef4d6a8c0_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _96aee04c_3fa4_4580_9311_89b36ca072a9_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
