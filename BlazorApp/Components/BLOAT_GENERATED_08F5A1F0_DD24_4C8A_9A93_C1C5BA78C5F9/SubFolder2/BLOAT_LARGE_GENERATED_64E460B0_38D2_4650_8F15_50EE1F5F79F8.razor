@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_d21c3306_b7a4_4153_afcd_9d539c447ee4_Text())
	@if (_57f50303_f6be_4515_96fe_2121adfef49c_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _57f50303_f6be_4515_96fe_2121adfef49c_buttonVisibilityTest = !_57f50303_f6be_4515_96fe_2121adfef49c_buttonVisibilityTest"> 
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9ad01a04_3acb_4d8d_89df_23a1a301a94a_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</TelerikButton> 
	}
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_802e0466_bea3_433d_9abf_78fa5cc850de_GridOnRead"> 
	<GridColumns> 
		<div class="@(Get_d71cdf6d_bc04_4502_ac6c_8dc1ee529369_Class())">
			<button>
				This is a test button! 
			</button>
		</div>
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
	</tr>
</table>
<div class="@(Get_51b7af70_ec88_4b23_b6d9_3ffc873fb4c6_Class())">
	<p>This div is a test!</p>
</div>
@if (_96e8e10e_0b6a_4175_88cd_40a29fa7fd1f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _96e8e10e_0b6a_4175_88cd_40a29fa7fd1f_buttonVisibilityTest = !_96e8e10e_0b6a_4175_88cd_40a29fa7fd1f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
		<td>
			<button>
				This is a test button! 
			</button>
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_63ea47c2_c7c2_4f19_8f8f_a36de5e11f1e_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_20d418a7_faa3_4f8e_8e19_0fea4adc7dcc_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _20d418a7_faa3_4f8e_8e19_0fea4adc7dcc_buttonVisibilityTest = !_20d418a7_faa3_4f8e_8e19_0fea4adc7dcc_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _de0a3917_577c_4793_a2c8_3226c4e93758_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _de0a3917_577c_4793_a2c8_3226c4e93758_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e48e3a9c_d617_4a39_83b5_a3f6dc80faed_GridOnRead"> 
	<GridColumns> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
				<th>
					Test Header 4
				</th>
				<th>
					Test Header 5
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col4Row1
				</td>
				<td>
					Col5Row1
				</td>
			</tr>
		</table>
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c67ef8be_100e_4a21_a90e_4c1cfb51d68b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_e1d3b0f1_f8b0_48b7_80ec_46eb3cb01f41_Class())">
	<p>This div is a test!</p>
</div>
@code { 
	private bool _57f50303_f6be_4515_96fe_2121adfef49c_buttonVisibilityTest;
	private bool _96e8e10e_0b6a_4175_88cd_40a29fa7fd1f_buttonVisibilityTest;
	private bool _20d418a7_faa3_4f8e_8e19_0fea4adc7dcc_buttonVisibilityTest;
	private void _9ad01a04_3acb_4d8d_89df_23a1a301a94a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_d21c3306_b7a4_4153_afcd_9d539c447ee4_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_d71cdf6d_bc04_4502_ac6c_8dc1ee529369_Class()
	{
		return "alert alert-info";
	}
	private void _802e0466_bea3_433d_9abf_78fa5cc850de_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_51b7af70_ec88_4b23_b6d9_3ffc873fb4c6_Class()
	{
		return "alert alert-info";
	}
	private void _63ea47c2_c7c2_4f19_8f8f_a36de5e11f1e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _de0a3917_577c_4793_a2c8_3226c4e93758_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _e48e3a9c_d617_4a39_83b5_a3f6dc80faed_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _c67ef8be_100e_4a21_a90e_4c1cfb51d68b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_e1d3b0f1_f8b0_48b7_80ec_46eb3cb01f41_Class()
	{
		return "alert alert-info";
	}
} 
