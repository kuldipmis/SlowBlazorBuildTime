@using Telerik.Blazor.Components;
<button>
	@if (_75e35093_caed_408c_a3d9_27186c6333a0_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _75e35093_caed_408c_a3d9_27186c6333a0_buttonVisibilityTest = !_75e35093_caed_408c_a3d9_27186c6333a0_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</button>
@if (_c0d4200e_c7d3_49ad_a841_c9a3d07a1ed3_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c0d4200e_c7d3_49ad_a841_c9a3d07a1ed3_buttonVisibilityTest = !_c0d4200e_c7d3_49ad_a841_c9a3d07a1ed3_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_41a34005_4310_435c_84c3_6a384002b71f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _41a34005_4310_435c_84c3_6a384002b71f_buttonVisibilityTest = !_41a34005_4310_435c_84c3_6a384002b71f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2502a5a7_bb7a_431e_b212_cc6c63dc9274_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_9d06ee4d_d12c_40cc_acff_c6087aae610e_Text())
</a>
@code { 
	private bool _75e35093_caed_408c_a3d9_27186c6333a0_buttonVisibilityTest;
	private bool _c0d4200e_c7d3_49ad_a841_c9a3d07a1ed3_buttonVisibilityTest;
	private bool _41a34005_4310_435c_84c3_6a384002b71f_buttonVisibilityTest;
	private void _2502a5a7_bb7a_431e_b212_cc6c63dc9274_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_9d06ee4d_d12c_40cc_acff_c6087aae610e_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
