@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5bec980b_84a7_40e2_bf02_eeaa9dbcc834_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<button>
	This is a test button! 
</button>
<div class="@(Get_a035d725_0ed3_42d0_ad02_af020a6f9e67_Class())">
	@if (_69a9a27d_fce5_4a83_89a3_e9112c18e2de_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _69a9a27d_fce5_4a83_89a3_e9112c18e2de_buttonVisibilityTest = !_69a9a27d_fce5_4a83_89a3_e9112c18e2de_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_985e676e_2ad8_43ce_a4cf_df230831f828_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _69a9a27d_fce5_4a83_89a3_e9112c18e2de_buttonVisibilityTest;
	private void _5bec980b_84a7_40e2_bf02_eeaa9dbcc834_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_a035d725_0ed3_42d0_ad02_af020a6f9e67_Class()
	{
		return "alert alert-info";
	}
	private void _985e676e_2ad8_43ce_a4cf_df230831f828_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
