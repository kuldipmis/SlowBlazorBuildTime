@using Telerik.Blazor.Components;
@if (_c706442f_194a_4689_8fee_9cafbd6cae5a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c706442f_194a_4689_8fee_9cafbd6cae5a_buttonVisibilityTest = !_c706442f_194a_4689_8fee_9cafbd6cae5a_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_74b08512_67bd_4e68_acd5_48e2352d88a9_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</button>
@if (_565e5bd5_2614_4da6_a96b_cbae5f450108_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _565e5bd5_2614_4da6_a96b_cbae5f450108_buttonVisibilityTest = !_565e5bd5_2614_4da6_a96b_cbae5f450108_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_53c7a935_31f8_4c0f_80fe_10225b7ff49f_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f6adb34c_498c_4c86_8881_1ef22ef85f65_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _9102474b_91b6_47db_bbda_05c7735c44a7_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fb2791a0_9ffd_4785_8151_01c52b36d130_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _c706442f_194a_4689_8fee_9cafbd6cae5a_buttonVisibilityTest;
	private bool _565e5bd5_2614_4da6_a96b_cbae5f450108_buttonVisibilityTest;
	private void _74b08512_67bd_4e68_acd5_48e2352d88a9_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_53c7a935_31f8_4c0f_80fe_10225b7ff49f_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _f6adb34c_498c_4c86_8881_1ef22ef85f65_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _9102474b_91b6_47db_bbda_05c7735c44a7_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _fb2791a0_9ffd_4785_8151_01c52b36d130_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
