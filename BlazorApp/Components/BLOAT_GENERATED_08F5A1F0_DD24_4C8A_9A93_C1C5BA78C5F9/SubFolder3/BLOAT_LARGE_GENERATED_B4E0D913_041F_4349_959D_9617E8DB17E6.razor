@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4594e480_1259_40b5_b3ca_6aef25f5c00c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_ad2f4cdd_912f_4ff4_9d68_788af93a49cc_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_99bc57da_c95c_4bf9_b8b9_6765614aba06_Text())
</a>
<a href="#">
	@(GetAnchor_6e89cd46_5171_43ea_b71e_897599ef860e_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _ae5ce3a5_2dd7_4500_a3f7_473125573d50_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _ae5ce3a5_2dd7_4500_a3f7_473125573d50_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_380f3d1d_87bb_4334_8c8c_2e3f798598bc_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _ae5ce3a5_2dd7_4500_a3f7_473125573d50_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_961fc9e5_6c0a_4fb5_902d_b0c76f959c78_Class())">
	<p>This div is a test!</p>
</div>
@code { 

	private void _4594e480_1259_40b5_b3ca_6aef25f5c00c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_ad2f4cdd_912f_4ff4_9d68_788af93a49cc_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_99bc57da_c95c_4bf9_b8b9_6765614aba06_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_6e89cd46_5171_43ea_b71e_897599ef860e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _380f3d1d_87bb_4334_8c8c_2e3f798598bc_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _ae5ce3a5_2dd7_4500_a3f7_473125573d50_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_961fc9e5_6c0a_4fb5_902d_b0c76f959c78_Class()
	{
		return "alert alert-info";
	}
} 
