@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9d54af77_c52f_4e42_8a01_33f2db6c2c26_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9d54af77_c52f_4e42_8a01_33f2db6c2c26_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9d54af77_c52f_4e42_8a01_33f2db6c2c26_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
	</tr>
</table>
<div class="@(Get_4bd70340_7d0c_46d8_9c0d_57b223416e68_Class())">
	<p>This div is a test!</p>
</div>
@code { 

	private string _de584c15_54c2_4e11_a5ed_0c961731d176_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _9d54af77_c52f_4e42_8a01_33f2db6c2c26_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_4bd70340_7d0c_46d8_9c0d_57b223416e68_Class()
	{
		return "alert alert-info";
	}
} 
