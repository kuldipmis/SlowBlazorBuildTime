@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_97b2718e_e30c_468f_8abb_f3c2875766f6_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_5d18d944_c986_4e38_a9ec_3a98a11a85cb_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _718140ce_424c_4185_bccd_44e838741f2d_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_34fd3c2c_1960_4b50_95a1_840545fcca58_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
	</tr>
</table>
@code { 

	private void _97b2718e_e30c_468f_8abb_f3c2875766f6_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_5d18d944_c986_4e38_a9ec_3a98a11a85cb_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _718140ce_424c_4185_bccd_44e838741f2d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _34fd3c2c_1960_4b50_95a1_840545fcca58_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
