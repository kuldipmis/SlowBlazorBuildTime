@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_aa5afc37_c58b_4bca_a204_0644dc8e8fd3_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _aa5afc37_c58b_4bca_a204_0644dc8e8fd3_buttonVisibilityTest = !_aa5afc37_c58b_4bca_a204_0644dc8e8fd3_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_81d4596f_a3bd_4529_bc6c_106c356baa3a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
	</tr>
</table>
@code { 
	private bool _aa5afc37_c58b_4bca_a204_0644dc8e8fd3_buttonVisibilityTest;
	private string _0a1dd992_06d5_4e82_80ef_89fe7fc915b3_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _81d4596f_a3bd_4529_bc6c_106c356baa3a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
