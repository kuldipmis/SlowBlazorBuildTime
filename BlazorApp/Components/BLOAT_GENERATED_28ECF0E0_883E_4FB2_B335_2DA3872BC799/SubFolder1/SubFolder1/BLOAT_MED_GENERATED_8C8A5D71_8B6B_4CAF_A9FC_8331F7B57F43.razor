@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_ad6ef40d_c2a9_45ee_902e_9da8c81faaef_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
@if (_36d6f294_d429_4a04_8f09_1ce04fa45042_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _36d6f294_d429_4a04_8f09_1ce04fa45042_buttonVisibilityTest = !_36d6f294_d429_4a04_8f09_1ce04fa45042_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_0f89ad39_b32b_4905_b6fb_86b5663c1ad5_Text())
</a>
@code { 
	private bool _36d6f294_d429_4a04_8f09_1ce04fa45042_buttonVisibilityTest;
	private void _ad6ef40d_c2a9_45ee_902e_9da8c81faaef_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_0f89ad39_b32b_4905_b6fb_86b5663c1ad5_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
