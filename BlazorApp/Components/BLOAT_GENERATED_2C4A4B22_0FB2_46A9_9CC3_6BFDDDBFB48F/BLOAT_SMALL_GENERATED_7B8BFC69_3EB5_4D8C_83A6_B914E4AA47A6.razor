@using Telerik.Blazor.Components;
<div class="@(Get_b48f0eb2_b36e_4388_abf2_ec0c526c35b5_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_d60cb125_1ace_4eec_85a4_1e6d1fa4f339_Text())
</a>
<button>
	@if (_9b4fb63c_a3b3_402c_be89_08dd51edd412_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _9b4fb63c_a3b3_402c_be89_08dd51edd412_buttonVisibilityTest = !_9b4fb63c_a3b3_402c_be89_08dd51edd412_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3c60ec34_5967_4f21_bea5_bcc99cad6264_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _9b4fb63c_a3b3_402c_be89_08dd51edd412_buttonVisibilityTest;
	private string Get_b48f0eb2_b36e_4388_abf2_ec0c526c35b5_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_d60cb125_1ace_4eec_85a4_1e6d1fa4f339_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _74635e40_c4e1_4979_89a4_6be3ff77a0ce_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _3c60ec34_5967_4f21_bea5_bcc99cad6264_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
