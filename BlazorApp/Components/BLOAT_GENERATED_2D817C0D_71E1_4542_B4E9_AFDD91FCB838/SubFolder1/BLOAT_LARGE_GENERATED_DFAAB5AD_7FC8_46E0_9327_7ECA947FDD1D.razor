@using Telerik.Blazor.Components;
<div class="@(Get_93ba371f_b0cf_4910_aa7a_2a30947013b5_Class())">
	<p>This div is a test!</p>
</div>
@if (_e90534c4_700f_421a_aa01_135b8e93496f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _e90534c4_700f_421a_aa01_135b8e93496f_buttonVisibilityTest = !_e90534c4_700f_421a_aa01_135b8e93496f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4e6ac820_6c46_446d_a250_23e3f5ac64d8_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _42504dcb_ad1c_444d_bf0d_1b9fb87e0fd2_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _42504dcb_ad1c_444d_bf0d_1b9fb87e0fd2_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _42504dcb_ad1c_444d_bf0d_1b9fb87e0fd2_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _42504dcb_ad1c_444d_bf0d_1b9fb87e0fd2_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_e2935c4a_ac88_4ebf_a1ad_04e27af8d807_Class())">
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col3Row1
			</td>
			<td>
				Col4Row1
			</td>
		</tr>
	</table>
</div>
<a href="#">
	@(GetAnchor_83b2dab4_afcb_4bca_bb7f_75360dc84748_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _87a087e6_3077_4a37_89fa_1be14da4d304_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _87a087e6_3077_4a37_89fa_1be14da4d304_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _87a087e6_3077_4a37_89fa_1be14da4d304_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _87a087e6_3077_4a37_89fa_1be14da4d304_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		<a href="#">
			@(GetAnchor_8eb72cee_a7e7_483d_b888_2a648b50531d_Text())
		</a>
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d02943d6_a844_49d1_b5a7_daeeeaf03d0b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _e90534c4_700f_421a_aa01_135b8e93496f_buttonVisibilityTest;
	private string Get_93ba371f_b0cf_4910_aa7a_2a30947013b5_Class()
	{
		return "alert alert-info";
	}
	private void _4e6ac820_6c46_446d_a250_23e3f5ac64d8_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _42504dcb_ad1c_444d_bf0d_1b9fb87e0fd2_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_e2935c4a_ac88_4ebf_a1ad_04e27af8d807_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_83b2dab4_afcb_4bca_bb7f_75360dc84748_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_8eb72cee_a7e7_483d_b888_2a648b50531d_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _87a087e6_3077_4a37_89fa_1be14da4d304_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _d02943d6_a844_49d1_b5a7_daeeeaf03d0b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
