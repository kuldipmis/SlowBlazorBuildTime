@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_14440941_c656_45b3_b249_01b7051be44c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_e142579c_abf3_4a66_b6a4_66793ee2cb67_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _e142579c_abf3_4a66_b6a4_66793ee2cb67_buttonVisibilityTest = !_e142579c_abf3_4a66_b6a4_66793ee2cb67_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_f8e8964b_162e_4f14_b9f5_ce0bb91e5234_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f8e8964b_162e_4f14_b9f5_ce0bb91e5234_buttonVisibilityTest = !_f8e8964b_162e_4f14_b9f5_ce0bb91e5234_buttonVisibilityTest"> 
		<div class="@(Get_05bb0f1d_666d_4878_bdb7_4fb8699cc8a0_Class())">
			<p>This div is a test!</p>
		</div>
	</TelerikButton> 
}
@if (_de2e34a7_faf8_40de_aab9_086a1de6ee10_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _de2e34a7_faf8_40de_aab9_086a1de6ee10_buttonVisibilityTest = !_de2e34a7_faf8_40de_aab9_086a1de6ee10_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9bb6a810_5df3_4e40_adfb_3ac9e024fcd3_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_55ad2e8d_23c7_4b26_a067_40e72b655add_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_25228208_10ab_488e_b083_e410c7046ca1_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_273fd0c9_5c0b_42bc_8f42_d18d00ae229a_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _5be03679_83a1_4a1f_b0d1_ccc757387ec2_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _5be03679_83a1_4a1f_b0d1_ccc757387ec2_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _5be03679_83a1_4a1f_b0d1_ccc757387ec2_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _5be03679_83a1_4a1f_b0d1_ccc757387ec2_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _e142579c_abf3_4a66_b6a4_66793ee2cb67_buttonVisibilityTest;
	private bool _f8e8964b_162e_4f14_b9f5_ce0bb91e5234_buttonVisibilityTest;
	private bool _de2e34a7_faf8_40de_aab9_086a1de6ee10_buttonVisibilityTest;
	private void _14440941_c656_45b3_b249_01b7051be44c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_05bb0f1d_666d_4878_bdb7_4fb8699cc8a0_Class()
	{
		return "alert alert-info";
	}
	private void _9bb6a810_5df3_4e40_adfb_3ac9e024fcd3_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_55ad2e8d_23c7_4b26_a067_40e72b655add_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _25228208_10ab_488e_b083_e410c7046ca1_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_273fd0c9_5c0b_42bc_8f42_d18d00ae229a_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _5be03679_83a1_4a1f_b0d1_ccc757387ec2_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
