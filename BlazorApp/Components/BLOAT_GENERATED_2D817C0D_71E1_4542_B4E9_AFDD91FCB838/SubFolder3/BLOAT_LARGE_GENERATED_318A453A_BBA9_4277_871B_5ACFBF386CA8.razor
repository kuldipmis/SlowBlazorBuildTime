@using Telerik.Blazor.Components;
@if (_9837d08d_8b2c_4e0c_b9a6_63f3758688d1_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _9837d08d_8b2c_4e0c_b9a6_63f3758688d1_buttonVisibilityTest = !_9837d08d_8b2c_4e0c_b9a6_63f3758688d1_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_eeb0021f_80f4_48ed_ae19_8af59cf6e413_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4ea4519b_c55c_4f6d_be96_390a3bf7cb2b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _005a5a5a_057d_48d5_9697_aa688c697086_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_e2933791_5a92_4ae2_a1ab_6f785787e52f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _e2933791_5a92_4ae2_a1ab_6f785787e52f_buttonVisibilityTest = !_e2933791_5a92_4ae2_a1ab_6f785787e52f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_0c132995_9eff_4871_b92b_767a343cfbfa_Text())
	<a href="#">
		@(GetAnchor_4c6d3131_4121_4cca_aa8f_83b9fe016fe9_Text())
	</a>
</a>
<div class="@(Get_d6bcc7ea_5f8d_40cc_a9e5_a61823a63578_Class())">
	<a href="#">
		@(GetAnchor_19a05b51_2b49_4bed_a88f_61d4c37e8624_Text())
	</a>
</div>
@code { 
	private bool _9837d08d_8b2c_4e0c_b9a6_63f3758688d1_buttonVisibilityTest;
	private bool _e2933791_5a92_4ae2_a1ab_6f785787e52f_buttonVisibilityTest;
	private void _eeb0021f_80f4_48ed_ae19_8af59cf6e413_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _4ea4519b_c55c_4f6d_be96_390a3bf7cb2b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _84fdeeef_322a_45f2_b217_6c6889c98376_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _005a5a5a_057d_48d5_9697_aa688c697086_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_4c6d3131_4121_4cca_aa8f_83b9fe016fe9_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_0c132995_9eff_4871_b92b_767a343cfbfa_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_19a05b51_2b49_4bed_a88f_61d4c37e8624_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_d6bcc7ea_5f8d_40cc_a9e5_a61823a63578_Class()
	{
		return "alert alert-info";
	}
} 
