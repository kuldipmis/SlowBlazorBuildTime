@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col1Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5a24db78_166f_49cd_a60e_8dc29b390476_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c623d963_ea1d_4ca7_a998_95deb8445e44_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_bb01db7e_53af_4e77_b294_c3a508c49682_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_b3b28f2f_8815_4ddb_9544_124086ea2092_Class())">
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4d98ae69_8b24_4231_9325_f7d7d9616f18_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</div>
@if (_ffb4e8e5_88fb_428f_9111_7cbfe8ba003f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _ffb4e8e5_88fb_428f_9111_7cbfe8ba003f_buttonVisibilityTest = !_ffb4e8e5_88fb_428f_9111_7cbfe8ba003f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_46f3acab_86ac_4609_8dc5_5e2a36ec2406_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _46f3acab_86ac_4609_8dc5_5e2a36ec2406_buttonVisibilityTest = !_46f3acab_86ac_4609_8dc5_5e2a36ec2406_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _ffb4e8e5_88fb_428f_9111_7cbfe8ba003f_buttonVisibilityTest;
	private bool _46f3acab_86ac_4609_8dc5_5e2a36ec2406_buttonVisibilityTest;
	private void _5a24db78_166f_49cd_a60e_8dc29b390476_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _c623d963_ea1d_4ca7_a998_95deb8445e44_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _bb01db7e_53af_4e77_b294_c3a508c49682_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _4d98ae69_8b24_4231_9325_f7d7d9616f18_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_b3b28f2f_8815_4ddb_9544_124086ea2092_Class()
	{
		return "alert alert-info";
	}
} 
