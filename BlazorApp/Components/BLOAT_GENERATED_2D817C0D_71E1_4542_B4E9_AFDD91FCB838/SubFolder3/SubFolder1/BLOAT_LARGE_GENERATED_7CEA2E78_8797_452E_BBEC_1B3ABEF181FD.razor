@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c121b918_4a15_4aa5_af59_83daade4f286_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<button>
	This is a test button! 
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_05f26892_c532_48de_bc1c_2fd136593c58_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _05f26892_c532_48de_bc1c_2fd136593c58_buttonVisibilityTest = !_05f26892_c532_48de_bc1c_2fd136593c58_buttonVisibilityTest"> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a884ef6f_6ca2_4661_9428_50e1f4fbc8a1_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TelerikButton> 
}
<div class="@(Get_e0e63065_9443_4163_9a8f_d9207a56b931_Class())">
	<p>This div is a test!</p>
</div>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
	</tr>
</table>
<div class="@(Get_67513b8f_50e2_4a5a_8153_4357bde23745_Class())">
	<div class="@(Get_730dd3ee_0c60_41a4_b476_efed83a789ea_Class())">
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1158f20e_ab86_47ed_b777_eae441ecd430_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</div>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4ded65ff_4698_43da_aacf_8a895c79d850_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d85027f2_b810_49ae_adb2_308f7e973262_GridOnRead"> 
			<GridColumns> 
				<a href="#">
					@(GetAnchor_25898cd4_c1d2_4bf2_aa9f_44be6c047538_Text())
				</a>
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_68bb29a4_b1a0_41bc_9a70_3052b0fc81dc_Class())">
	<p>This div is a test!</p>
</div>
@code { 
	private bool _05f26892_c532_48de_bc1c_2fd136593c58_buttonVisibilityTest;
	private void _c121b918_4a15_4aa5_af59_83daade4f286_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _97b001ab_275f_4b17_9e56_1c1a5794a731_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _a884ef6f_6ca2_4661_9428_50e1f4fbc8a1_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_e0e63065_9443_4163_9a8f_d9207a56b931_Class()
	{
		return "alert alert-info";
	}
	private void _1158f20e_ab86_47ed_b777_eae441ecd430_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_730dd3ee_0c60_41a4_b476_efed83a789ea_Class()
	{
		return "alert alert-info";
	}
	private string Get_67513b8f_50e2_4a5a_8153_4357bde23745_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_25898cd4_c1d2_4bf2_aa9f_44be6c047538_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _d85027f2_b810_49ae_adb2_308f7e973262_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _4ded65ff_4698_43da_aacf_8a895c79d850_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_68bb29a4_b1a0_41bc_9a70_3052b0fc81dc_Class()
	{
		return "alert alert-info";
	}
} 
