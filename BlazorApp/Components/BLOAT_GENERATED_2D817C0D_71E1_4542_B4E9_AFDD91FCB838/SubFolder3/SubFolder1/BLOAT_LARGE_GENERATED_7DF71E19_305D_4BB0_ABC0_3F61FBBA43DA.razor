@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4004370a_0258_4f18_bf3a_e518b737baaa_GridOnRead"> 
	<GridColumns> 
		@if (_85292f5a_3890_4bc1_b313_bbb7a7a4e046_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _85292f5a_3890_4bc1_b313_bbb7a7a4e046_buttonVisibilityTest = !_85292f5a_3890_4bc1_b313_bbb7a7a4e046_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4208aa06_7805_4b5b_9b1c_5069663d8b7e_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_699a9f31_459d_4eaa_a47f_775c7f76f0e2_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _699a9f31_459d_4eaa_a47f_775c7f76f0e2_buttonVisibilityTest = !_699a9f31_459d_4eaa_a47f_775c7f76f0e2_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	This is a test button! 
</button>
<button>
	This is a test button! 
</button>
<div class="@(Get_e92bc2b4_0414_41aa_aee9_b982a4c2dfdf_Class())">
	<p>This div is a test!</p>
</div>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
	</tr>
</table>
@if (_be6313bb_1d84_45ed_9ff5_0d690762ca74_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _be6313bb_1d84_45ed_9ff5_0d690762ca74_buttonVisibilityTest = !_be6313bb_1d84_45ed_9ff5_0d690762ca74_buttonVisibilityTest"> 
		@if (_833ce6d5_999f_4772_a94e_dced032c45bf_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _833ce6d5_999f_4772_a94e_dced032c45bf_buttonVisibilityTest = !_833ce6d5_999f_4772_a94e_dced032c45bf_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_2a8fee90_4a65_49d4_aa24_cde1141c522b_Text())
</a>
@code { 
	private bool _85292f5a_3890_4bc1_b313_bbb7a7a4e046_buttonVisibilityTest;
	private bool _699a9f31_459d_4eaa_a47f_775c7f76f0e2_buttonVisibilityTest;
	private bool _833ce6d5_999f_4772_a94e_dced032c45bf_buttonVisibilityTest;
	private bool _be6313bb_1d84_45ed_9ff5_0d690762ca74_buttonVisibilityTest;
	private void _4004370a_0258_4f18_bf3a_e518b737baaa_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _4208aa06_7805_4b5b_9b1c_5069663d8b7e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_e92bc2b4_0414_41aa_aee9_b982a4c2dfdf_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_2a8fee90_4a65_49d4_aa24_cde1141c522b_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
