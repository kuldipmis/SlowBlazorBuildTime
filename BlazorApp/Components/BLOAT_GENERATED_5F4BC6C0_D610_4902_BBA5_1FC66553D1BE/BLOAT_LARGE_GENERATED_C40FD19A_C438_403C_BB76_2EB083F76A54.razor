@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0cb9c6c3_8d8d_43ea_a2b7_cf45bda69d29_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _0cb9c6c3_8d8d_43ea_a2b7_cf45bda69d29_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _0cb9c6c3_8d8d_43ea_a2b7_cf45bda69d29_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _0cb9c6c3_8d8d_43ea_a2b7_cf45bda69d29_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_60d5c808_fe5d_4bfa_bb09_04a16adbc56c_Text())
</a>
@if (_25180823_d8d9_4b96_938b_9f8451b37eb7_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _25180823_d8d9_4b96_938b_9f8451b37eb7_buttonVisibilityTest = !_25180823_d8d9_4b96_938b_9f8451b37eb7_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_abab660b_bbb2_466b_a29f_cac9dde2426f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _abab660b_bbb2_466b_a29f_cac9dde2426f_buttonVisibilityTest = !_abab660b_bbb2_466b_a29f_cac9dde2426f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5c029392_1aef_4fda_8839_fd7e531b820b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_d5e5cbda_111c_451f_8bcf_38748dc17333_Text())
	<div class="@(Get_a43583bb_587e_4009_9e43_fb6ec7e5ce6f_Class())">
		<p>This div is a test!</p>
	</div>
</a>
@code { 
	private bool _25180823_d8d9_4b96_938b_9f8451b37eb7_buttonVisibilityTest;
	private bool _abab660b_bbb2_466b_a29f_cac9dde2426f_buttonVisibilityTest;
	private string _0cb9c6c3_8d8d_43ea_a2b7_cf45bda69d29_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_60d5c808_fe5d_4bfa_bb09_04a16adbc56c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _5c029392_1aef_4fda_8839_fd7e531b820b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_a43583bb_587e_4009_9e43_fb6ec7e5ce6f_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_d5e5cbda_111c_451f_8bcf_38748dc17333_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
