@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_50e61c46_5e68_4b7f_a3d8_6a48877a250b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_189859d5_5f78_4684_981e_4bb04512833a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _189859d5_5f78_4684_981e_4bb04512833a_buttonVisibilityTest = !_189859d5_5f78_4684_981e_4bb04512833a_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_90ded055_05f5_4693_846a_c73a41f6507a_Class())">
	<p>This div is a test!</p>
</div>
<button>
	<div class="@(Get_78f042f0_ecee_4be7_bdff_8ed0bd7c2e61_Class())">
		<p>This div is a test!</p>
	</div>
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
	</tr>
</table>
<button>
	<button>
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_8146c2e1_2ad4_48cd_be7f_3e04ce202019_GridOnRead"> 
			<GridColumns> 
				<TelerikTabStrip> 
					<TabStripTab> 
						@{ var tabStrip0Data = _1ef245d2_d520_47a5_b2d8_5f47d7c30f2d_GetTabStripData(); }
						@tabStrip0Data
					</TabStripTab> 
					<TabStripTab> 
						@{ var tabStrip1Data = _1ef245d2_d520_47a5_b2d8_5f47d7c30f2d_GetTabStripData(); }
						@tabStrip1Data
					</TabStripTab> 
					<TabStripTab> 
						@{ var tabStrip2Data = _1ef245d2_d520_47a5_b2d8_5f47d7c30f2d_GetTabStripData(); }
						@tabStrip2Data
					</TabStripTab> 
				</TelerikTabStrip> 
			</GridColumns> 
		</TelerikGrid> 
	</button>
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_46d1aff1_330d_44aa_9bce_330be246cf0d_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _189859d5_5f78_4684_981e_4bb04512833a_buttonVisibilityTest;
	private void _50e61c46_5e68_4b7f_a3d8_6a48877a250b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _b8a12f8d_4cbb_4d8a_80fc_da56018e80a5_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_90ded055_05f5_4693_846a_c73a41f6507a_Class()
	{
		return "alert alert-info";
	}
	private string Get_78f042f0_ecee_4be7_bdff_8ed0bd7c2e61_Class()
	{
		return "alert alert-info";
	}
	private string _1ef245d2_d520_47a5_b2d8_5f47d7c30f2d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _8146c2e1_2ad4_48cd_be7f_3e04ce202019_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _46d1aff1_330d_44aa_9bce_330be246cf0d_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
