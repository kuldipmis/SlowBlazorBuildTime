@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_71cdc739_4623_45a3_bab0_dbd7b5b0971c_Text())
</a>
<a href="#">
	@(GetAnchor_6874b631_494f_4c06_990e_d09d76aa21cb_Text())
</a>
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_769fdf3f_8247_4a58_acdd_2d338f4ed850_Text())
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c89c24b1_5a72_4d76_bd0a_9b6f4d291b62_GridOnRead"> 
		<GridColumns> 
			<a href="#">
				@(GetAnchor_6f1725cc_e7f9_4b6b_b5b6_7ba686e1c180_Text())
			</a>
		</GridColumns> 
	</TelerikGrid> 
</a>
<a href="#">
	@(GetAnchor_a378efb2_a225_4eeb_b010_173cb9b973cc_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
		<td>
			Col5Row5
		</td>
	</tr>
</table>
@code { 

	private string GetAnchor_71cdc739_4623_45a3_bab0_dbd7b5b0971c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_6874b631_494f_4c06_990e_d09d76aa21cb_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_6f1725cc_e7f9_4b6b_b5b6_7ba686e1c180_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _c89c24b1_5a72_4d76_bd0a_9b6f4d291b62_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_769fdf3f_8247_4a58_acdd_2d338f4ed850_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_a378efb2_a225_4eeb_b010_173cb9b973cc_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
