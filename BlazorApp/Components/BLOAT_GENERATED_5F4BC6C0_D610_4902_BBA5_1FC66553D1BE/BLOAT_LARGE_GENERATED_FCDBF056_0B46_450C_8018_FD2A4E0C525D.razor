@using Telerik.Blazor.Components;
<div class="@(Get_11c4b679_bebc_4950_ae6e_b2f5047b2b34_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_76c90ad5_fc6a_4160_b2a2_d95acbd55f70_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_c8c53d13_a67c_45f3_ba1c_28228cb3a5b7_Class())">
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
			<th>
				Test Header 5
			</th>
		</tr>
		<tr>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<th>
							Test Header 1
						</th>
						<th>
							Test Header 2
						</th>
					</tr>
					<tr>
						<td>
							Col1Row1
						</td>
						<td>
							Col2Row1
						</td>
						<td>
							Col1Row2
						</td>
						<td>
							Col2Row2
						</td>
					</tr>
				</table>
			</td>
		</tr>
	</table>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a4dd9507_b5d1_420f_afea_1a34001d37ed_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0fde3907_d180_457f_a548_cfc4bacc307c_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_dca553af_d4b8_4d2d_b8da_a562830e96b2_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_025cf45f_36ec_46b5_be71_a6bfa9ee6756_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_093b5d50_ee07_433e_a046_7fcb70e4fe77_Class())">
	<p>This div is a test!</p>
</div>
@if (_a6ed07fb_ee8a_4b31_91a6_2f94393bd84f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _a6ed07fb_ee8a_4b31_91a6_2f94393bd84f_buttonVisibilityTest = !_a6ed07fb_ee8a_4b31_91a6_2f94393bd84f_buttonVisibilityTest"> 
		<div class="@(Get_03389547_b271_4be4_8335_d953cef7c598_Class())">
			<p>This div is a test!</p>
		</div>
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_31e3d76f_9655_4162_8eb7_3b4bbe2f4b55_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _a6ed07fb_ee8a_4b31_91a6_2f94393bd84f_buttonVisibilityTest;
	private string Get_11c4b679_bebc_4950_ae6e_b2f5047b2b34_Class()
	{
		return "alert alert-info";
	}
	private string Get_76c90ad5_fc6a_4160_b2a2_d95acbd55f70_Class()
	{
		return "alert alert-info";
	}
	private string Get_c8c53d13_a67c_45f3_ba1c_28228cb3a5b7_Class()
	{
		return "alert alert-info";
	}
	private void _a4dd9507_b5d1_420f_afea_1a34001d37ed_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _0fde3907_d180_457f_a548_cfc4bacc307c_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _dca553af_d4b8_4d2d_b8da_a562830e96b2_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_025cf45f_36ec_46b5_be71_a6bfa9ee6756_Class()
	{
		return "alert alert-info";
	}
	private string Get_093b5d50_ee07_433e_a046_7fcb70e4fe77_Class()
	{
		return "alert alert-info";
	}
	private string Get_03389547_b271_4be4_8335_d953cef7c598_Class()
	{
		return "alert alert-info";
	}
	private void _31e3d76f_9655_4162_8eb7_3b4bbe2f4b55_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
