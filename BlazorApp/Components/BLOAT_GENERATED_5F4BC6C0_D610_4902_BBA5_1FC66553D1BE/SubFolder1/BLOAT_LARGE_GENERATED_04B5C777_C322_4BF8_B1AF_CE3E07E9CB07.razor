@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_cda7c43b_2c34_4cad_a985_ab1cbb7d70ce_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _f60fcce7_593d_4246_8b4d_9fd37b79b262_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _f60fcce7_593d_4246_8b4d_9fd37b79b262_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_39681ca0_8ca7_4513_b754_b0df7ec49d02_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fc5fbce2_ef54_486e_aead_62c38e963e09_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _00a4f33f_5a5c_4d5c_8e44_a1d505b95ee5_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			<div class="@(Get_206e4c1a_8f98_4f20_984f_ccac3dac9bee_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_206e4c1a_8f98_4f20_984f_ccac3dac9bee_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_206e4c1a_8f98_4f20_984f_ccac3dac9bee_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_206e4c1a_8f98_4f20_984f_ccac3dac9bee_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_5afceec3_ac92_43c7_aaed_e62023a94bd0_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
	</tr>
</table>
@code { 

	private string _f60fcce7_593d_4246_8b4d_9fd37b79b262_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _cda7c43b_2c34_4cad_a985_ab1cbb7d70ce_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_39681ca0_8ca7_4513_b754_b0df7ec49d02_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _fc5fbce2_ef54_486e_aead_62c38e963e09_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _00a4f33f_5a5c_4d5c_8e44_a1d505b95ee5_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_206e4c1a_8f98_4f20_984f_ccac3dac9bee_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_5afceec3_ac92_43c7_aaed_e62023a94bd0_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
