@using Telerik.Blazor.Components;
<div class="@(Get_a507d8bd_f8ac_4ce0_ad61_21fb9ea20fd4_Class())">
	<button>
		This is a test button! 
	</button>
</div>
<a href="#">
	@(GetAnchor_c53ac27d_573f_4ff7_bc49_9d0d1a3f236e_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4c34aee0_31d3_41f3_8e43_8e9d99ca26b3_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_19e6c692_e9c9_4991_a852_ecebd0cfee12_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _faf9ab7a_e8d5_4bd9_8acd_32cc253aa6fb_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _faf9ab7a_e8d5_4bd9_8acd_32cc253aa6fb_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_66055d4d_9f00_4084_a2c0_348c15987871_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5a9a0165_fe77_4a54_8b1e_6fb191bea33b_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _74313579_5cca_4251_b6bf_312596519932_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_520e5266_cdd0_4d18_84f8_bf03eb132035_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _520e5266_cdd0_4d18_84f8_bf03eb132035_buttonVisibilityTest = !_520e5266_cdd0_4d18_84f8_bf03eb132035_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_26b23ca5_37d1_46ae_a852_0295ff798bc6_Text())
</a>
<a href="#">
	@(GetAnchor_0575d72c_f862_4eb1_987f_89edccc2d27c_Text())
</a>
@code { 
	private bool _520e5266_cdd0_4d18_84f8_bf03eb132035_buttonVisibilityTest;
	private string Get_a507d8bd_f8ac_4ce0_ad61_21fb9ea20fd4_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_c53ac27d_573f_4ff7_bc49_9d0d1a3f236e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _4c34aee0_31d3_41f3_8e43_8e9d99ca26b3_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _faf9ab7a_e8d5_4bd9_8acd_32cc253aa6fb_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _19e6c692_e9c9_4991_a852_ecebd0cfee12_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _5a9a0165_fe77_4a54_8b1e_6fb191bea33b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _66055d4d_9f00_4084_a2c0_348c15987871_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _74313579_5cca_4251_b6bf_312596519932_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_26b23ca5_37d1_46ae_a852_0295ff798bc6_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_0575d72c_f862_4eb1_987f_89edccc2d27c_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
