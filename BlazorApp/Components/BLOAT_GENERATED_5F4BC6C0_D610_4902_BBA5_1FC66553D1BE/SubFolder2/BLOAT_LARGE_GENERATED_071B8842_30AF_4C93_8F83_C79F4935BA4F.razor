@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_0684e51e_a75b_4ce5_b4f1_72a4255495bb_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_0d27d9ef_e715_405e_ac2b_2232810c51d1_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _58529eb0_b4e0_4360_9547_8e4b23fb7b30_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _58529eb0_b4e0_4360_9547_8e4b23fb7b30_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _58529eb0_b4e0_4360_9547_8e4b23fb7b30_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _58529eb0_b4e0_4360_9547_8e4b23fb7b30_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a0c4ee30_e560_4bc8_bd67_6d5cd4907552_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c656a93f_6347_43ce_9178_baf26002c013_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_1651a178_0c88_4d68_929b_d72b1768950b_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _1651a178_0c88_4d68_929b_d72b1768950b_buttonVisibilityTest = !_1651a178_0c88_4d68_929b_d72b1768950b_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_889731ac_e86c_4d0c_ab21_2c110aabf112_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _889731ac_e86c_4d0c_ab21_2c110aabf112_buttonVisibilityTest = !_889731ac_e86c_4d0c_ab21_2c110aabf112_buttonVisibilityTest"> 
		@if (_dc7bafb7_21e3_4a19_ad68_c8b906e327f3_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _dc7bafb7_21e3_4a19_ad68_c8b906e327f3_buttonVisibilityTest = !_dc7bafb7_21e3_4a19_ad68_c8b906e327f3_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</TelerikButton> 
}
@code { 
	private bool _1651a178_0c88_4d68_929b_d72b1768950b_buttonVisibilityTest;
	private bool _dc7bafb7_21e3_4a19_ad68_c8b906e327f3_buttonVisibilityTest;
	private bool _889731ac_e86c_4d0c_ab21_2c110aabf112_buttonVisibilityTest;
	private void _0684e51e_a75b_4ce5_b4f1_72a4255495bb_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_0d27d9ef_e715_405e_ac2b_2232810c51d1_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _58529eb0_b4e0_4360_9547_8e4b23fb7b30_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _a0c4ee30_e560_4bc8_bd67_6d5cd4907552_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _c656a93f_6347_43ce_9178_baf26002c013_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
