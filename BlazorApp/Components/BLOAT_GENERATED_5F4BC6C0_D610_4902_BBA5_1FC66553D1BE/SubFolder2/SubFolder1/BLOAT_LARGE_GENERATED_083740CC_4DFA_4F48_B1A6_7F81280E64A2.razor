@using Telerik.Blazor.Components;
@if (_fef1faa8_75f2_4f80_94e7_5d687861cfb9_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _fef1faa8_75f2_4f80_94e7_5d687861cfb9_buttonVisibilityTest = !_fef1faa8_75f2_4f80_94e7_5d687861cfb9_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_8967bf81_b75e_4ebd_8023_2198d1abb2fb_Text())
</a>
<a href="#">
	@(GetAnchor_fd899d98_da85_4f14_aea9_deda693b62f9_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f9957520_212e_49ea_957d_42cec7e0a137_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_315f06f3_3837_4d3c_b7c3_015979b624dc_Text())
</a>
<a href="#">
	@(GetAnchor_17bafe1c_a60b_44b4_8529_55ca3024ce9a_Text())
</a>
@code { 
	private bool _fef1faa8_75f2_4f80_94e7_5d687861cfb9_buttonVisibilityTest;
	private string GetAnchor_8967bf81_b75e_4ebd_8023_2198d1abb2fb_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_fd899d98_da85_4f14_aea9_deda693b62f9_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _f9957520_212e_49ea_957d_42cec7e0a137_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_315f06f3_3837_4d3c_b7c3_015979b624dc_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_17bafe1c_a60b_44b4_8529_55ca3024ce9a_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
