@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _4900ccff_aacb_4343_97c0_a4abd055ec74_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _4900ccff_aacb_4343_97c0_a4abd055ec74_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_589f30e3_8f3e_4bbb_9b8b_cf3105f5c732_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_e9ac6a7d_cd49_4640_903e_7f702778c658_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6a159e2d_f75f_4f0e_bd9f_1bd2451b5821_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_35803f35_2dc6_4a13_8639_fd46102d2fa4_Class())">
	<p>This div is a test!</p>
</div>
<button>
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
			<td>
				Col1Row3
			</td>
			<td>
				Col2Row3
			</td>
			<td>
				Col1Row4
			</td>
			<td>
				Col2Row4
			</td>
		</tr>
	</table>
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _6bbf23b4_546d_4241_9600_91aeef23d350_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_292ce650_566c_45ab_b054_1bd31e22d107_GridOnRead"> 
			<GridColumns> 
				<div class="@(Get_9e0eb9c1_5107_455e_864c_fe1c05a50855_Class())">
					<a href="#">
						@(GetAnchor_717df45b_b3cd_4bce_b8c3_55afaf9a6e89_Text())
					</a>
				</div>
			</GridColumns> 
		</TelerikGrid> 
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _6bbf23b4_546d_4241_9600_91aeef23d350_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _6bbf23b4_546d_4241_9600_91aeef23d350_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_c008a80e_abba_4801_a53b_bdb909ad34bf_Text())
</a>
@code { 

	private string GetAnchor_44540b28_9262_4db6_a0db_99df3d82ecba_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _4900ccff_aacb_4343_97c0_a4abd055ec74_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _589f30e3_8f3e_4bbb_9b8b_cf3105f5c732_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_e9ac6a7d_cd49_4640_903e_7f702778c658_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _6a159e2d_f75f_4f0e_bd9f_1bd2451b5821_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_35803f35_2dc6_4a13_8639_fd46102d2fa4_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_717df45b_b3cd_4bce_b8c3_55afaf9a6e89_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_9e0eb9c1_5107_455e_864c_fe1c05a50855_Class()
	{
		return "alert alert-info";
	}
	private void _292ce650_566c_45ab_b054_1bd31e22d107_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _6bbf23b4_546d_4241_9600_91aeef23d350_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_c008a80e_abba_4801_a53b_bdb909ad34bf_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
