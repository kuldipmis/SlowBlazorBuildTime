@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
@if (_d26b300f_e73b_4fcc_9d8f_cf2a90b9fa5b_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d26b300f_e73b_4fcc_9d8f_cf2a90b9fa5b_buttonVisibilityTest = !_d26b300f_e73b_4fcc_9d8f_cf2a90b9fa5b_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_ebbcfc95_261f_4dfa_8b0a_2f654340bab6_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_a5e543d6_3b34_4930_a5eb_d4ec7591c650_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _a5e543d6_3b34_4930_a5eb_d4ec7591c650_buttonVisibilityTest = !_a5e543d6_3b34_4930_a5eb_d4ec7591c650_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_aebe3237_f9d0_4a3c_85a6_b315bf001dfd_Class())">
	<p>This div is a test!</p>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e6f49e9e_1246_455b_87b4_b76502e3dfc2_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_7680b836_7f7b_42e1_96b9_ee9c573a1513_Class())">
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
			<th>
				Test Header 5
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col3Row1
			</td>
			<td>
				Col4Row1
			</td>
			<td>
				Col5Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
			<td>
				Col3Row2
			</td>
			<td>
				Col4Row2
			</td>
			<td>
				Col5Row2
			</td>
			<td>
				Col1Row3
			</td>
			<td>
				Col2Row3
			</td>
			<td>
				Col3Row3
			</td>
			<td>
				Col4Row3
			</td>
			<td>
				Col5Row3
			</td>
			<td>
				Col1Row4
			</td>
			<td>
				Col2Row4
			</td>
			<td>
				Col3Row4
			</td>
			<td>
				Col4Row4
			</td>
			<td>
				Col5Row4
			</td>
		</tr>
	</table>
</div>
@if (_b745dd63_fa18_4a49_abbb_cbf5972f50d7_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _b745dd63_fa18_4a49_abbb_cbf5972f50d7_buttonVisibilityTest = !_b745dd63_fa18_4a49_abbb_cbf5972f50d7_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _d26b300f_e73b_4fcc_9d8f_cf2a90b9fa5b_buttonVisibilityTest;
	private bool _a5e543d6_3b34_4930_a5eb_d4ec7591c650_buttonVisibilityTest;
	private bool _b745dd63_fa18_4a49_abbb_cbf5972f50d7_buttonVisibilityTest;
	private void _e3783a1b_4b57_4edf_98e9_8bd424bb4147_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _ebbcfc95_261f_4dfa_8b0a_2f654340bab6_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_aebe3237_f9d0_4a3c_85a6_b315bf001dfd_Class()
	{
		return "alert alert-info";
	}
	private void _e6f49e9e_1246_455b_87b4_b76502e3dfc2_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_7680b836_7f7b_42e1_96b9_ee9c573a1513_Class()
	{
		return "alert alert-info";
	}
} 
