@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _4fe8a528_e472_4d49_b3db_5af2190bbf4f_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _4fe8a528_e472_4d49_b3db_5af2190bbf4f_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _4fe8a528_e472_4d49_b3db_5af2190bbf4f_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_017109d5_c768_441b_b578_9827914b88ce_Class())">
	<p>This div is a test!</p>
</div>
@if (_d52453b5_6db4_47b8_8534_5ec36df1fba0_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d52453b5_6db4_47b8_8534_5ec36df1fba0_buttonVisibilityTest = !_d52453b5_6db4_47b8_8534_5ec36df1fba0_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_eac8bccb_2380_4ac9_98e3_ca9269e01951_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _e235b546_2ba1_4ec1_914a_d21c8d6e88ec_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_89324a80_160c_4492_b2cd_fc0298f60988_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _89324a80_160c_4492_b2cd_fc0298f60988_buttonVisibilityTest = !_89324a80_160c_4492_b2cd_fc0298f60988_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_3f5dfd84_1b96_48d1_9c92_3ce74d835070_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _3f5dfd84_1b96_48d1_9c92_3ce74d835070_buttonVisibilityTest = !_3f5dfd84_1b96_48d1_9c92_3ce74d835070_buttonVisibilityTest"> 
		@if (_495387e3_48ac_4f32_9967_94dc2517f6e6_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _495387e3_48ac_4f32_9967_94dc2517f6e6_buttonVisibilityTest = !_495387e3_48ac_4f32_9967_94dc2517f6e6_buttonVisibilityTest"> 
				<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_522b2785_ff77_4bdd_8821_82de744e6416_GridOnRead"> 
					<GridColumns> 
						<GridColumn Field="Item1" Title="TestColumn1"/> 
						<GridColumn Field="Item2" Title="TestColumn2"/> 
					</GridColumns> 
				</TelerikGrid> 
			</TelerikButton> 
		}
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_f731ef7c_c349_4cc3_b94f_2ddb7b675c77_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f731ef7c_c349_4cc3_b94f_2ddb7b675c77_buttonVisibilityTest = !_f731ef7c_c349_4cc3_b94f_2ddb7b675c77_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_58d47aff_f857_4bbc_a672_76f71b554280_Text())
	<a href="#">
		@(GetAnchor_a3b962e9_c511_40bf_84b3_83cabb625f5b_Text())
	</a>
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c95b15e9_062b_4bf8_b076_dcc61bdc6c4b_GridOnRead"> 
	<GridColumns> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
				<th>
					Test Header 4
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col4Row1
				</td>
			</tr>
		</table>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _d52453b5_6db4_47b8_8534_5ec36df1fba0_buttonVisibilityTest;
	private bool _ac02a97e_90fb_471b_a5cf_dce421ab81a3_buttonVisibilityTest;
	private bool _89324a80_160c_4492_b2cd_fc0298f60988_buttonVisibilityTest;
	private bool _495387e3_48ac_4f32_9967_94dc2517f6e6_buttonVisibilityTest;
	private bool _3f5dfd84_1b96_48d1_9c92_3ce74d835070_buttonVisibilityTest;
	private bool _f731ef7c_c349_4cc3_b94f_2ddb7b675c77_buttonVisibilityTest;
	private string _4fe8a528_e472_4d49_b3db_5af2190bbf4f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_017109d5_c768_441b_b578_9827914b88ce_Class()
	{
		return "alert alert-info";
	}
	private void _eac8bccb_2380_4ac9_98e3_ca9269e01951_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _e235b546_2ba1_4ec1_914a_d21c8d6e88ec_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _522b2785_ff77_4bdd_8821_82de744e6416_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _7a2ac527_b0a9_4b17_b212_7e6447db83c1_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_a3b962e9_c511_40bf_84b3_83cabb625f5b_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_58d47aff_f857_4bbc_a672_76f71b554280_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _c95b15e9_062b_4bf8_b076_dcc61bdc6c4b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
