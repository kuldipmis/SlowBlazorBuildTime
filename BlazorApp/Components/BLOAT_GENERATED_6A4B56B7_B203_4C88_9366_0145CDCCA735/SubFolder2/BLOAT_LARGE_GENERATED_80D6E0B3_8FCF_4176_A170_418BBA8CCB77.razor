@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_128081c2_29c2_4c32_8b93_a1a56b068b47_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_d3f5e9db_be23_4d27_a22d_7bd21b1c8e30_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d3f5e9db_be23_4d27_a22d_7bd21b1c8e30_buttonVisibilityTest = !_d3f5e9db_be23_4d27_a22d_7bd21b1c8e30_buttonVisibilityTest"> 
		<div class="@(Get_5f6cd827_31dd_4f49_9c73_c3fa338f1ba6_Class())">
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_57fa1a41_914b_4017_ac15_1476add4b012_GridOnRead"> 
				<GridColumns> 
					<table>
						<tr>
							<th>
								Test Header 1
							</th>
							<th>
								Test Header 2
							</th>
							<th>
								Test Header 3
							</th>
						</tr>
						<tr>
							<td>
								Col1Row1
							</td>
							<td>
								Col2Row1
							</td>
							<td>
								Col3Row1
							</td>
							<td>
								Col1Row2
							</td>
							<td>
								Col2Row2
							</td>
							<td>
								Col3Row2
							</td>
							<td>
								Col1Row3
							</td>
							<td>
								Col2Row3
							</td>
							<td>
								Col3Row3
							</td>
						</tr>
					</table>
				</GridColumns> 
			</TelerikGrid> 
		</div>
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4c20410c_8fd8_4e42_9733_97448c824974_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_69d37da9_e0cf_4732_ba2a_251180056539_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_c379ee6c_edca_4100_862d_bbdb52675e4a_Text())
</a>
<div class="@(Get_11bb933a_f2ee_4094_9706_c5df2d314cd8_Class())">
	<p>This div is a test!</p>
</div>
@if (_b0bbb02e_d89b_4954_9356_44749766a740_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _b0bbb02e_d89b_4954_9356_44749766a740_buttonVisibilityTest = !_b0bbb02e_d89b_4954_9356_44749766a740_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_63f5650c_1353_4765_9dae_b24ea7bbf4a2_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _63f5650c_1353_4765_9dae_b24ea7bbf4a2_buttonVisibilityTest = !_63f5650c_1353_4765_9dae_b24ea7bbf4a2_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _76662b2f_40f5_4288_9531_991116161d9a_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _d3f5e9db_be23_4d27_a22d_7bd21b1c8e30_buttonVisibilityTest;
	private bool _b0bbb02e_d89b_4954_9356_44749766a740_buttonVisibilityTest;
	private bool _63f5650c_1353_4765_9dae_b24ea7bbf4a2_buttonVisibilityTest;
	private void _128081c2_29c2_4c32_8b93_a1a56b068b47_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _57fa1a41_914b_4017_ac15_1476add4b012_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_5f6cd827_31dd_4f49_9c73_c3fa338f1ba6_Class()
	{
		return "alert alert-info";
	}
	private void _4c20410c_8fd8_4e42_9733_97448c824974_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _69d37da9_e0cf_4732_ba2a_251180056539_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_c379ee6c_edca_4100_862d_bbdb52675e4a_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_11bb933a_f2ee_4094_9706_c5df2d314cd8_Class()
	{
		return "alert alert-info";
	}
	private string _76662b2f_40f5_4288_9531_991116161d9a_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
