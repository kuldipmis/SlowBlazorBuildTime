@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_568cce10_afa1_4ce8_afce_b14222ef9e18_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
	</tr>
</table>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _eea85930_0a7e_4fcb_9254_47f4e7a3eada_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	This is a test button! 
</button>
@if (_ea805dce_f057_461e_9711_d7e93e0cd237_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _ea805dce_f057_461e_9711_d7e93e0cd237_buttonVisibilityTest = !_ea805dce_f057_461e_9711_d7e93e0cd237_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_bd68bdb9_71a0_4926_a860_f090314d7727_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_e70ec077_8a94_4a1e_82e3_c57758d35a5e_Text())
</a>
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_08dfb60e_6f71_4baa_b41c_99b888e8e3d9_Text())
</a>
@code { 
	private bool _ea805dce_f057_461e_9711_d7e93e0cd237_buttonVisibilityTest;
	private void _568cce10_afa1_4ce8_afce_b14222ef9e18_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _eea85930_0a7e_4fcb_9254_47f4e7a3eada_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _bd68bdb9_71a0_4926_a860_f090314d7727_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_e70ec077_8a94_4a1e_82e3_c57758d35a5e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_08dfb60e_6f71_4baa_b41c_99b888e8e3d9_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
