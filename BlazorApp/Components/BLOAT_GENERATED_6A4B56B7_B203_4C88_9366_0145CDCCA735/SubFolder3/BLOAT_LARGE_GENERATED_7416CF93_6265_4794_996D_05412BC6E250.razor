@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3218f2fc_ef69_4546_aa3a_edf80bc3f0cd_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_29cad48a_de2d_4bda_b7ff_17c81b7b3481_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _29cad48a_de2d_4bda_b7ff_17c81b7b3481_buttonVisibilityTest = !_29cad48a_de2d_4bda_b7ff_17c81b7b3481_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3f1ad050_3c85_42ef_8fa1_7d41b7d83552_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
	</tr>
</table>
@if (_0689e860_dc25_4db6_8f77_2145ac38c9dc_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _0689e860_dc25_4db6_8f77_2145ac38c9dc_buttonVisibilityTest = !_0689e860_dc25_4db6_8f77_2145ac38c9dc_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	<a href="#">
		@(GetAnchor_65b563c9_b70e_44f6_8910_ccf39e0771e9_Text())
	</a>
</button>
<a href="#">
	@(GetAnchor_cf34202d_103e_4f16_8732_86a95641cf0e_Text())
	<div class="@(Get_c20b6341_f39e_4152_9e2c_c28af0e1ecf7_Class())">
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b181c7d6_51ee_4776_9066_d5bf4e2f148a_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</div>
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
		<td>
			<div class="@(Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class())">
				<p>This div is a test!</p>
			</div>
		</td>
	</tr>
</table>
<button>
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d0c9e587_3fd6_4108_b816_f416cebff774_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
	</tr>
</table>
@code { 
	private bool _29cad48a_de2d_4bda_b7ff_17c81b7b3481_buttonVisibilityTest;
	private bool _0689e860_dc25_4db6_8f77_2145ac38c9dc_buttonVisibilityTest;
	private void _3218f2fc_ef69_4546_aa3a_edf80bc3f0cd_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _3f1ad050_3c85_42ef_8fa1_7d41b7d83552_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_65b563c9_b70e_44f6_8910_ccf39e0771e9_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _b181c7d6_51ee_4776_9066_d5bf4e2f148a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_c20b6341_f39e_4152_9e2c_c28af0e1ecf7_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_cf34202d_103e_4f16_8732_86a95641cf0e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_2f30b304_b786_41bc_9d53_922a4ef33dc8_Class()
	{
		return "alert alert-info";
	}
	private void _d0c9e587_3fd6_4108_b816_f416cebff774_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
