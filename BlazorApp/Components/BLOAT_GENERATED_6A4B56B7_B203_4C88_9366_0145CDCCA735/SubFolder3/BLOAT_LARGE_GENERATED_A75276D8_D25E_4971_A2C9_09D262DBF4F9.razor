@using Telerik.Blazor.Components;
@if (_0ae526e9_fccd_4714_881a_d40e6429aee1_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _0ae526e9_fccd_4714_881a_d40e6429aee1_buttonVisibilityTest = !_0ae526e9_fccd_4714_881a_d40e6429aee1_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_e59c43b6_9322_48ae_b542_61ec69918379_Text())
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
			<th>
				Test Header 5
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col3Row1
			</td>
			<td>
				Col4Row1
			</td>
			<td>
				Col5Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
			<td>
				Col3Row2
			</td>
			<td>
				Col4Row2
			</td>
			<td>
				Col5Row2
			</td>
		</tr>
	</table>
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _6d7e0e1f_32ce_4e43_b638_3a360921ed63_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _6d7e0e1f_32ce_4e43_b638_3a360921ed63_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _6d7e0e1f_32ce_4e43_b638_3a360921ed63_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_ec7019d2_7991_42d9_9da2_d435483eaca5_GridOnRead"> 
	<GridColumns> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
			</tr>
			<tr>
				<td>
					<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e9beb8b4_e6c7_4377_a4d6_d76f4224c654_GridOnRead"> 
						<GridColumns> 
							<GridColumn Field="Item1" Title="TestColumn1"/> 
							<GridColumn Field="Item2" Title="TestColumn2"/> 
						</GridColumns> 
					</TelerikGrid> 
				</td>
				<td>
					<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e9beb8b4_e6c7_4377_a4d6_d76f4224c654_GridOnRead"> 
						<GridColumns> 
							<GridColumn Field="Item1" Title="TestColumn1"/> 
							<GridColumn Field="Item2" Title="TestColumn2"/> 
						</GridColumns> 
					</TelerikGrid> 
				</td>
			</tr>
		</table>
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5c025833_aedf_4100_b297_cad986fcdad5_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _0ae526e9_fccd_4714_881a_d40e6429aee1_buttonVisibilityTest;
	private string GetAnchor_e59c43b6_9322_48ae_b542_61ec69918379_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _6d7e0e1f_32ce_4e43_b638_3a360921ed63_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _e9beb8b4_e6c7_4377_a4d6_d76f4224c654_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _ec7019d2_7991_42d9_9da2_d435483eaca5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _5c025833_aedf_4100_b297_cad986fcdad5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
