@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_158f1de9_874f_4cda_9b14_92293ec7e5f9_Text())
</a>
<div class="@(Get_671de757_8852_436c_a70c_2fc3d9dd7072_Class())">
	<p>This div is a test!</p>
</div>
@if (_c15bfcb2_8a7f_4b30_83e3_dcafd6480a55_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c15bfcb2_8a7f_4b30_83e3_dcafd6480a55_buttonVisibilityTest = !_c15bfcb2_8a7f_4b30_83e3_dcafd6480a55_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _53ed891a_9211_4924_ab15_1f5ea49941f7_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _53ed891a_9211_4924_ab15_1f5ea49941f7_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_42df2f27_38de_44fe_abef_3b718425acbe_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_81da7e3d_7caa_488e_b3e5_aee175ac43ac_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _dab52a5f_9c60_4672_8c1b_5985e5c3a84f_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _dab52a5f_9c60_4672_8c1b_5985e5c3a84f_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
			<TabStripTab> 
				<div class="@(Get_2ff79098_4f62_442b_91f1_76593ef6a2b9_Class())">
					<p>This div is a test!</p>
				</div>
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip3Data = _dab52a5f_9c60_4672_8c1b_5985e5c3a84f_GetTabStripData(); }
				@tabStrip3Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip4Data = _dab52a5f_9c60_4672_8c1b_5985e5c3a84f_GetTabStripData(); }
				@tabStrip4Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_3c58b152_183a_4fee_afbe_e78e0c52da5c_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_0abac16e_5092_40c7_8aa4_1bfe53082a21_Class())">
	<p>This div is a test!</p>
</div>
@code { 
	private bool _c15bfcb2_8a7f_4b30_83e3_dcafd6480a55_buttonVisibilityTest;
	private string GetAnchor_158f1de9_874f_4cda_9b14_92293ec7e5f9_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_671de757_8852_436c_a70c_2fc3d9dd7072_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_7881eb36_05e0_4437_8bad_d3d61b7d4ecc_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _53ed891a_9211_4924_ab15_1f5ea49941f7_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_42df2f27_38de_44fe_abef_3b718425acbe_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_2ff79098_4f62_442b_91f1_76593ef6a2b9_Class()
	{
		return "alert alert-info";
	}
	private string _dab52a5f_9c60_4672_8c1b_5985e5c3a84f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _81da7e3d_7caa_488e_b3e5_aee175ac43ac_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_3c58b152_183a_4fee_afbe_e78e0c52da5c_Class()
	{
		return "alert alert-info";
	}
	private string Get_0abac16e_5092_40c7_8aa4_1bfe53082a21_Class()
	{
		return "alert alert-info";
	}
} 
