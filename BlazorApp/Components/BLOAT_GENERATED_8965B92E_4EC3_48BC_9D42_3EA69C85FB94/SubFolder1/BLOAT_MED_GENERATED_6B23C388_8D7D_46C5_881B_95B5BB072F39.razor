@using Telerik.Blazor.Components;
@if (_04d05f6a_4526_4725_a5de_3fb8b4b89df4_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _04d05f6a_4526_4725_a5de_3fb8b4b89df4_buttonVisibilityTest = !_04d05f6a_4526_4725_a5de_3fb8b4b89df4_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_76b2f8ff_d31c_4d36_bc4b_81855f9b46e5_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _76b2f8ff_d31c_4d36_bc4b_81855f9b46e5_buttonVisibilityTest = !_76b2f8ff_d31c_4d36_bc4b_81855f9b46e5_buttonVisibilityTest"> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _88e7e0f3_ec69_41b5_9be6_b039fc7bac29_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				<button>
					This is a test button! 
				</button>
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip2Data = _88e7e0f3_ec69_41b5_9be6_b039fc7bac29_GetTabStripData(); }
				@tabStrip2Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_7f1e3535_3c86_42e0_8c20_b26b751ca8f9_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_7d32505b_62a6_43fd_a201_24494e0d4c41_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
		<td>
			Col5Row5
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_c8a4c069_d0ff_4f72_a516_e21170f496da_Text())
</a>
@code { 
	private bool _04d05f6a_4526_4725_a5de_3fb8b4b89df4_buttonVisibilityTest;
	private bool _76b2f8ff_d31c_4d36_bc4b_81855f9b46e5_buttonVisibilityTest;
	private string _88e7e0f3_ec69_41b5_9be6_b039fc7bac29_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _7f1e3535_3c86_42e0_8c20_b26b751ca8f9_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_7d32505b_62a6_43fd_a201_24494e0d4c41_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_c8a4c069_d0ff_4f72_a516_e21170f496da_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
