@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_aeec4dcb_ed97_49b9_8e6f_a1ea226664d0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
		<td>
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
				</tr>
			</table>
		</td>
	</tr>
</table>
@if (_09e8de6d_015d_4d3b_ba21_f4c1f7d657b4_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _09e8de6d_015d_4d3b_ba21_f4c1f7d657b4_buttonVisibilityTest = !_09e8de6d_015d_4d3b_ba21_f4c1f7d657b4_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
	</tr>
</table>
@code { 
	private bool _09e8de6d_015d_4d3b_ba21_f4c1f7d657b4_buttonVisibilityTest;
	private void _aeec4dcb_ed97_49b9_8e6f_a1ea226664d0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
