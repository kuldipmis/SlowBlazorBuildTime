@using Telerik.Blazor.Components;
<div class="@(Get_46df0079_0194_481f_87c2_d466346de0f4_Class())">
	<p>This div is a test!</p>
</div>
@if (_c58f0356_d3b7_4bc5_93ff_9fff0f11560d_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c58f0356_d3b7_4bc5_93ff_9fff0f11560d_buttonVisibilityTest = !_c58f0356_d3b7_4bc5_93ff_9fff0f11560d_buttonVisibilityTest"> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1349280d_6f7c_43e7_a80a_000dbfad2bf7_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_150a9c61_8cb6_48d5_8dd4_53c534bcc6ee_Text())
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _683d2e0a_e89b_4a7f_b65c_4b1c9d4c9f47_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _683d2e0a_e89b_4a7f_b65c_4b1c9d4c9f47_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
	</TelerikTabStrip> 
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_8a7dbd0d_7561_4fca_8ebf_557523537373_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
		<td>
			Col5Row5
		</td>
	</tr>
</table>
@code { 
	private bool _c58f0356_d3b7_4bc5_93ff_9fff0f11560d_buttonVisibilityTest;
	private string Get_46df0079_0194_481f_87c2_d466346de0f4_Class()
	{
		return "alert alert-info";
	}
	private void _1349280d_6f7c_43e7_a80a_000dbfad2bf7_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _683d2e0a_e89b_4a7f_b65c_4b1c9d4c9f47_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_150a9c61_8cb6_48d5_8dd4_53c534bcc6ee_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _8a7dbd0d_7561_4fca_8ebf_557523537373_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
