@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_911e25a0_e5c3_4b60_b781_f138b413ba07_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a79d9f8e_45cb_48f9_bb2a_fdbe78be2e7f_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
	</tr>
</table>
@if (_d20bef60_bff4_4627_afac_b4b5650d21d9_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d20bef60_bff4_4627_afac_b4b5650d21d9_buttonVisibilityTest = !_d20bef60_bff4_4627_afac_b4b5650d21d9_buttonVisibilityTest"> 
		@if (_c9c2bc33_2a5c_4c12_b62f_80d738fa27c9_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _c9c2bc33_2a5c_4c12_b62f_80d738fa27c9_buttonVisibilityTest = !_c9c2bc33_2a5c_4c12_b62f_80d738fa27c9_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _709ca415_a1ef_4c70_9d0b_1bdad531fc80_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _709ca415_a1ef_4c70_9d0b_1bdad531fc80_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_f0ef9fb8_83a4_493f_9b51_e3154a3a7d62_Class())">
	<p>This div is a test!</p>
</div>
@if (_f5908e2d_caeb_4997_bd67_32b4d135ec3a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f5908e2d_caeb_4997_bd67_32b4d135ec3a_buttonVisibilityTest = !_f5908e2d_caeb_4997_bd67_32b4d135ec3a_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_27893f99_fc25_4365_8bd1_d0f5dd1b995a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _c9c2bc33_2a5c_4c12_b62f_80d738fa27c9_buttonVisibilityTest;
	private bool _d20bef60_bff4_4627_afac_b4b5650d21d9_buttonVisibilityTest;
	private bool _f5908e2d_caeb_4997_bd67_32b4d135ec3a_buttonVisibilityTest;
	private void _a79d9f8e_45cb_48f9_bb2a_fdbe78be2e7f_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _911e25a0_e5c3_4b60_b781_f138b413ba07_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _709ca415_a1ef_4c70_9d0b_1bdad531fc80_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_f0ef9fb8_83a4_493f_9b51_e3154a3a7d62_Class()
	{
		return "alert alert-info";
	}
	private void _27893f99_fc25_4365_8bd1_d0f5dd1b995a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
