@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
	</tr>
</table>
<div class="@(Get_62e104f4_0a1d_4c7c_8e5c_2554dcd685c3_Class())">
	<p>This div is a test!</p>
</div>
@if (_28188224_192c_411f_94b6_f8ad23ed67fe_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _28188224_192c_411f_94b6_f8ad23ed67fe_buttonVisibilityTest = !_28188224_192c_411f_94b6_f8ad23ed67fe_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _30d2a09a_32e9_4358_9918_8b9e5fa2f59f_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _30d2a09a_32e9_4358_9918_8b9e5fa2f59f_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_b6e5cde9_5498_4092_9f45_763ac79cd60c_Text())
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3579dba7_b547_4746_bc2e_2603b250e6ac_GridOnRead"> 
		<GridColumns> 
			@if (_7ce52329_448c_4764_8c86_88299c536d18_buttonVisibilityTest) 
			{
				<TelerikButton OnClick="() => _7ce52329_448c_4764_8c86_88299c536d18_buttonVisibilityTest = !_7ce52329_448c_4764_8c86_88299c536d18_buttonVisibilityTest"> 
					This is a test button! 
				</TelerikButton> 
			}
		</GridColumns> 
	</TelerikGrid> 
</a>
@code { 
	private bool _28188224_192c_411f_94b6_f8ad23ed67fe_buttonVisibilityTest;
	private bool _7ce52329_448c_4764_8c86_88299c536d18_buttonVisibilityTest;
	private string Get_62e104f4_0a1d_4c7c_8e5c_2554dcd685c3_Class()
	{
		return "alert alert-info";
	}
	private string _30d2a09a_32e9_4358_9918_8b9e5fa2f59f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _3579dba7_b547_4746_bc2e_2603b250e6ac_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_b6e5cde9_5498_4092_9f45_763ac79cd60c_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
