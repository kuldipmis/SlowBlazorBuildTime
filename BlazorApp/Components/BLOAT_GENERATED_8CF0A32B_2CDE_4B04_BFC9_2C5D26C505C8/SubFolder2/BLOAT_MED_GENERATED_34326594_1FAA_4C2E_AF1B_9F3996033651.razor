@using Telerik.Blazor.Components;
@if (_aad86ae8_b94c_4f92_b4c7_5d5e5928b69c_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _aad86ae8_b94c_4f92_b4c7_5d5e5928b69c_buttonVisibilityTest = !_aad86ae8_b94c_4f92_b4c7_5d5e5928b69c_buttonVisibilityTest"> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_56c72330_5bc7_4a1b_976e_e9153fbeb8f8_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_7dd83494_ca91_4286_98ce_113a8bccaf1b_Text())
</a>
<button>
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip2Data = _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData(); }
			@tabStrip2Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip3Data = _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData(); }
			@tabStrip3Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip4Data = _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData(); }
			@tabStrip4Data
		</TabStripTab> 
	</TelerikTabStrip> 
</button>
<div class="@(Get_b188e3e9_96e7_4ee7_adf6_55bfcbf57e40_Class())">
	<p>This div is a test!</p>
</div>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _4aed44cb_52f3_409e_b058_689dfca5be82_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _4aed44cb_52f3_409e_b058_689dfca5be82_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _aad86ae8_b94c_4f92_b4c7_5d5e5928b69c_buttonVisibilityTest;
	private void _56c72330_5bc7_4a1b_976e_e9153fbeb8f8_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_7dd83494_ca91_4286_98ce_113a8bccaf1b_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _b4200fc4_ca3e_4f36_ba64_5edcae916634_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_b188e3e9_96e7_4ee7_adf6_55bfcbf57e40_Class()
	{
		return "alert alert-info";
	}
	private string _4aed44cb_52f3_409e_b058_689dfca5be82_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
