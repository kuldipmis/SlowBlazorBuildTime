@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _b2a1c042_1d7e_454e_8d39_e712ac06441d_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _b2a1c042_1d7e_454e_8d39_e712ac06441d_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _b2a1c042_1d7e_454e_8d39_e712ac06441d_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	@if (_37fbe475_6598_463e_9944_30e2e528237e_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _37fbe475_6598_463e_9944_30e2e528237e_buttonVisibilityTest = !_37fbe475_6598_463e_9944_30e2e528237e_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col1Row5
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4fc83939_1a5e_4599_9f18_0ef7d21cdd9c_GridOnRead"> 
	<GridColumns> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col1Row2
				</td>
				<td>
					Col2Row2
				</td>
				<td>
					Col3Row2
				</td>
				<td>
					Col1Row3
				</td>
				<td>
					Col2Row3
				</td>
				<td>
					Col3Row3
				</td>
				<td>
					Col1Row4
				</td>
				<td>
					Col2Row4
				</td>
				<td>
					Col3Row4
				</td>
			</tr>
		</table>
	</GridColumns> 
</TelerikGrid> 
@if (_9ca30f70_111f_4978_a693_505aa3413b27_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _9ca30f70_111f_4978_a693_505aa3413b27_buttonVisibilityTest = !_9ca30f70_111f_4978_a693_505aa3413b27_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6dc64b71_2207_4ab6_9de9_ae1ce8179544_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_5547f5c3_6530_4f75_b18b_e3b632fa51d2_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _5547f5c3_6530_4f75_b18b_e3b632fa51d2_buttonVisibilityTest = !_5547f5c3_6530_4f75_b18b_e3b632fa51d2_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b25fcf47_f06e_439d_895c_0a231e9b9faa_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _37fbe475_6598_463e_9944_30e2e528237e_buttonVisibilityTest;
	private bool _9ca30f70_111f_4978_a693_505aa3413b27_buttonVisibilityTest;
	private bool _5547f5c3_6530_4f75_b18b_e3b632fa51d2_buttonVisibilityTest;
	private void _f8201a66_485f_402a_9b59_316d7b89c1ed_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _b2a1c042_1d7e_454e_8d39_e712ac06441d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _4fc83939_1a5e_4599_9f18_0ef7d21cdd9c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _6dc64b71_2207_4ab6_9de9_ae1ce8179544_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _b25fcf47_f06e_439d_895c_0a231e9b9faa_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
