@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_7d1f4baf_d14c_4ec0_ad39_c1bc31bebea4_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_12aed868_eeb0_4e45_91d3_e11d4fa5838b_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_cd1d9964_f47c_4814_a166_4cb3e51b9638_Text())
</a>
@if (_c39d5cc7_9f1a_441f_9e3e_7e3167770d8f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c39d5cc7_9f1a_441f_9e3e_7e3167770d8f_buttonVisibilityTest = !_c39d5cc7_9f1a_441f_9e3e_7e3167770d8f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _c39d5cc7_9f1a_441f_9e3e_7e3167770d8f_buttonVisibilityTest;
	private void _7d1f4baf_d14c_4ec0_ad39_c1bc31bebea4_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_12aed868_eeb0_4e45_91d3_e11d4fa5838b_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_cd1d9964_f47c_4814_a166_4cb3e51b9638_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
