@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_edcea459_f50f_4ba6_853d_b9424ba0423b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_fe7d70b7_26aa_4f77_988c_3c5bbae6b61d_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _fe7d70b7_26aa_4f77_988c_3c5bbae6b61d_buttonVisibilityTest = !_fe7d70b7_26aa_4f77_988c_3c5bbae6b61d_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_eff9799c_6c22_41a4_ac2a_9c0795848e81_Class())">
	<p>This div is a test!</p>
</div>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2d063f62_bf65_4c05_bdcd_2bd6212e57c4_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2d063f62_bf65_4c05_bdcd_2bd6212e57c4_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _2d063f62_bf65_4c05_bdcd_2bd6212e57c4_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1675402a_604c_4496_b885_9565d6e77d56_GridOnRead"> 
	<GridColumns> 
		@if (_2024e420_7e57_49d5_9b17_ee245bc28131_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _2024e420_7e57_49d5_9b17_ee245bc28131_buttonVisibilityTest = !_2024e420_7e57_49d5_9b17_ee245bc28131_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _fe7d70b7_26aa_4f77_988c_3c5bbae6b61d_buttonVisibilityTest;
	private bool _2024e420_7e57_49d5_9b17_ee245bc28131_buttonVisibilityTest;
	private void _edcea459_f50f_4ba6_853d_b9424ba0423b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_eff9799c_6c22_41a4_ac2a_9c0795848e81_Class()
	{
		return "alert alert-info";
	}
	private string _2d063f62_bf65_4c05_bdcd_2bd6212e57c4_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _1675402a_604c_4496_b885_9565d6e77d56_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
