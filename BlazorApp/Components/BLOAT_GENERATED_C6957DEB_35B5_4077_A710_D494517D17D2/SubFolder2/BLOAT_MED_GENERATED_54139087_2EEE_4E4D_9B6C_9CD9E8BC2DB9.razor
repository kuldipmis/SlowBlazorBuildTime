@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4e37e0c1_0844_4c4f_9371_055767d3c637_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_81aa7505_6687_4b62_bd0a_454e12606288_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _785361a2_78fb_4482_a134_4b7b9898cf84_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		<div class="@(Get_31d06442_475a_449b_a92e_74b9cccfc378_Class())">
			<p>This div is a test!</p>
		</div>
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _785361a2_78fb_4482_a134_4b7b9898cf84_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _785361a2_78fb_4482_a134_4b7b9898cf84_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _785361a2_78fb_4482_a134_4b7b9898cf84_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_e47e6bdb_6732_477a_8db1_fb8411cfe645_Text())
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _033678f0_5242_47e8_9641_4b8eb07bff6f_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
	</TelerikTabStrip> 
</a>
@if (_bafa1a7c_b4ce_4e07_8baa_ac0813ca3e20_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _bafa1a7c_b4ce_4e07_8baa_ac0813ca3e20_buttonVisibilityTest = !_bafa1a7c_b4ce_4e07_8baa_ac0813ca3e20_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _bafa1a7c_b4ce_4e07_8baa_ac0813ca3e20_buttonVisibilityTest;
	private void _4e37e0c1_0844_4c4f_9371_055767d3c637_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _81aa7505_6687_4b62_bd0a_454e12606288_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_31d06442_475a_449b_a92e_74b9cccfc378_Class()
	{
		return "alert alert-info";
	}
	private string _785361a2_78fb_4482_a134_4b7b9898cf84_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _033678f0_5242_47e8_9641_4b8eb07bff6f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_e47e6bdb_6732_477a_8db1_fb8411cfe645_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
