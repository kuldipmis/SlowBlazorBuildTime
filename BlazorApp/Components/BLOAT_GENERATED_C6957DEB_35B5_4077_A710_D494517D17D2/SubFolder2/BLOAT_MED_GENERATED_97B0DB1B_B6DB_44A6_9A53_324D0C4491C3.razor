@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_ae913a86_fae8_45ec_86f3_af97f61a17af_GridOnRead"> 
	<GridColumns> 
		<button>
			<a href="#">
				@(GetAnchor_3d5e0a4a_552d_4b9a_9248_8b562f4036e3_Text())
			</a>
		</button>
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_bf51bcda_9003_4476_848a_73a756112dc4_Text())
</a>
@if (_5b86e548_012e_42fe_b874_33e5194d463c_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _5b86e548_012e_42fe_b874_33e5194d463c_buttonVisibilityTest = !_5b86e548_012e_42fe_b874_33e5194d463c_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2c60c1a6_330b_4f66_9933_e14ff76b65a4_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2c60c1a6_330b_4f66_9933_e14ff76b65a4_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_48010459_9fbb_4c6e_ab08_00e62fbfd42a_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _2c60c1a6_330b_4f66_9933_e14ff76b65a4_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _5b86e548_012e_42fe_b874_33e5194d463c_buttonVisibilityTest;
	private string GetAnchor_3d5e0a4a_552d_4b9a_9248_8b562f4036e3_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _ae913a86_fae8_45ec_86f3_af97f61a17af_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_bf51bcda_9003_4476_848a_73a756112dc4_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _48010459_9fbb_4c6e_ab08_00e62fbfd42a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _2c60c1a6_330b_4f66_9933_e14ff76b65a4_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
