@using Telerik.Blazor.Components;
@if (_7e04557d_59b3_4288_84f6_1168dc97528a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _7e04557d_59b3_4288_84f6_1168dc97528a_buttonVisibilityTest = !_7e04557d_59b3_4288_84f6_1168dc97528a_buttonVisibilityTest"> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
			</tr>
		</table>
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_55ec428e_1cb3_40d0_93d7_562dbc471b30_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f8be6fca_7943_4ace_bafb_1228d5158d06_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a2e40d71_f9c1_4eec_97b6_db95960ddc8d_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2604e284_5617_4542_9590_24532e1929af_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2604e284_5617_4542_9590_24532e1929af_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_d2e3457d_a54a_43da_a230_ec6e9ed53f5e_Text())
	@if (_5684d472_fde4_4bc3_b8f6_18666dc82083_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _5684d472_fde4_4bc3_b8f6_18666dc82083_buttonVisibilityTest = !_5684d472_fde4_4bc3_b8f6_18666dc82083_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</a>
@code { 
	private bool _7e04557d_59b3_4288_84f6_1168dc97528a_buttonVisibilityTest;
	private bool _5684d472_fde4_4bc3_b8f6_18666dc82083_buttonVisibilityTest;
	private void _55ec428e_1cb3_40d0_93d7_562dbc471b30_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _f8be6fca_7943_4ace_bafb_1228d5158d06_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _a2e40d71_f9c1_4eec_97b6_db95960ddc8d_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _2604e284_5617_4542_9590_24532e1929af_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_d2e3457d_a54a_43da_a230_ec6e9ed53f5e_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
