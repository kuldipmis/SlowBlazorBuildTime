@using Telerik.Blazor.Components;
<div class="@(Get_e92539e8_ba6e_4f58_aebd_16cc11736722_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_a671adaf_5075_46eb_87ee_a08f56f7b5c7_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_d3572f07_5370_410f_aceb_1178132387cf_Class())">
	@if (_24b9aedf_6695_43eb_a407_730d58693fd7_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _24b9aedf_6695_43eb_a407_730d58693fd7_buttonVisibilityTest = !_24b9aedf_6695_43eb_a407_730d58693fd7_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</div>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_aa513a76_41e4_4b88_8470_bcc9897e9343_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1fe4eb74_e5c8_4a94_952e_d76ae3ae2b49_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _24b9aedf_6695_43eb_a407_730d58693fd7_buttonVisibilityTest;
	private string Get_e92539e8_ba6e_4f58_aebd_16cc11736722_Class()
	{
		return "alert alert-info";
	}
	private string Get_a671adaf_5075_46eb_87ee_a08f56f7b5c7_Class()
	{
		return "alert alert-info";
	}
	private string Get_d3572f07_5370_410f_aceb_1178132387cf_Class()
	{
		return "alert alert-info";
	}
	private void _aa513a76_41e4_4b88_8470_bcc9897e9343_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _1fe4eb74_e5c8_4a94_952e_d76ae3ae2b49_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
