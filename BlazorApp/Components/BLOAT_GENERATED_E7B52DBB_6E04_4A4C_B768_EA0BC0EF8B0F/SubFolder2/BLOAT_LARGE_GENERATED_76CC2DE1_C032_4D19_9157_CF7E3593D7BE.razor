@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_dd99809e_eff8_4251_b0b4_54d01be263a4_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_aa8d047b_0959_4d51_8676_6411e43e6fb1_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _aa8d047b_0959_4d51_8676_6411e43e6fb1_buttonVisibilityTest = !_aa8d047b_0959_4d51_8676_6411e43e6fb1_buttonVisibilityTest"> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3d07a65b_9af0_4296_88e6_ca1cd4c334de_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_7d271721_896a_43a5_9daf_cbd7fbac1148_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _e830a540_ca72_4488_9003_070ba19ee51c_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _e830a540_ca72_4488_9003_070ba19ee51c_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _e830a540_ca72_4488_9003_070ba19ee51c_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_cf0c7fec_2239_40fd_a2d3_3025b4d040c0_Text())
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _5d3eb37d_f2b1_483e_878b_8341da432c60_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _5d3eb37d_f2b1_483e_878b_8341da432c60_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
	</TelerikTabStrip> 
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_438d6b12_06a1_4ca3_a003_7c2c3d0569af_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_50fbb87a_c447_42c6_8325_bbddc7c8a9fb_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4b6bd992_731b_40bb_861b_b60251fd5e1b_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _aa8d047b_0959_4d51_8676_6411e43e6fb1_buttonVisibilityTest;
	private void _dd99809e_eff8_4251_b0b4_54d01be263a4_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _3d07a65b_9af0_4296_88e6_ca1cd4c334de_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_7d271721_896a_43a5_9daf_cbd7fbac1148_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _e830a540_ca72_4488_9003_070ba19ee51c_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _5d3eb37d_f2b1_483e_878b_8341da432c60_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_cf0c7fec_2239_40fd_a2d3_3025b4d040c0_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _438d6b12_06a1_4ca3_a003_7c2c3d0569af_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _50fbb87a_c447_42c6_8325_bbddc7c8a9fb_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _4b6bd992_731b_40bb_861b_b60251fd5e1b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
