@using Telerik.Blazor.Components;
@if (_9fc76c39_db4a_453b_b78f_a1d0c9f4eeb1_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _9fc76c39_db4a_453b_b78f_a1d0c9f4eeb1_buttonVisibilityTest = !_9fc76c39_db4a_453b_b78f_a1d0c9f4eeb1_buttonVisibilityTest"> 
		<button>
			This is a test button! 
		</button>
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_70d355da_37f8_4ce8_92f0_7809dc4d1882_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f4389b1f_15ce_4ed9_9455_344f60dcfc0d_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_d82f5913_40a3_483d_9ae1_6f0bccf115fc_Class())">
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col1Row3
			</td>
			<td>
				Col1Row4
			</td>
			<td>
				Col1Row5
			</td>
		</tr>
	</table>
</div>
@if (_67def0d5_a4a2_4f9f_893a_46fb84063fe5_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _67def0d5_a4a2_4f9f_893a_46fb84063fe5_buttonVisibilityTest = !_67def0d5_a4a2_4f9f_893a_46fb84063fe5_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _9fc76c39_db4a_453b_b78f_a1d0c9f4eeb1_buttonVisibilityTest;
	private bool _67def0d5_a4a2_4f9f_893a_46fb84063fe5_buttonVisibilityTest;
	private void _70d355da_37f8_4ce8_92f0_7809dc4d1882_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _f4389b1f_15ce_4ed9_9455_344f60dcfc0d_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_d82f5913_40a3_483d_9ae1_6f0bccf115fc_Class()
	{
		return "alert alert-info";
	}
} 
