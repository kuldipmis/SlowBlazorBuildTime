@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fc433eec_7267_4ed8_b0a7_b70d0990f105_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _7804ccc5_5b10_4137_92d8_fd020354b037_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _7804ccc5_5b10_4137_92d8_fd020354b037_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _7804ccc5_5b10_4137_92d8_fd020354b037_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _7804ccc5_5b10_4137_92d8_fd020354b037_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_3474cf12_f4b5_47bd_8b65_c43457595619_Class())">
	<p>This div is a test!</p>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d2a6e354_39c4_4232_8e52_5258854cbca5_GridOnRead"> 
	<GridColumns> 
		<div class="@(Get_8528e6de_795f_4dba_82ab_610a17a11bd4_Class())">
			<p>This div is a test!</p>
		</div>
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_f1042a03_0ca4_4869_9da7_6291e52c98e8_Text())
</a>
<button>
	This is a test button! 
</button>
@if (_269a64b0_36c5_4f90_953c_ae8a2c0bd6e5_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _269a64b0_36c5_4f90_953c_ae8a2c0bd6e5_buttonVisibilityTest = !_269a64b0_36c5_4f90_953c_ae8a2c0bd6e5_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _269a64b0_36c5_4f90_953c_ae8a2c0bd6e5_buttonVisibilityTest;
	private void _fc433eec_7267_4ed8_b0a7_b70d0990f105_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _7804ccc5_5b10_4137_92d8_fd020354b037_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_3474cf12_f4b5_47bd_8b65_c43457595619_Class()
	{
		return "alert alert-info";
	}
	private string Get_8528e6de_795f_4dba_82ab_610a17a11bd4_Class()
	{
		return "alert alert-info";
	}
	private void _d2a6e354_39c4_4232_8e52_5258854cbca5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_f1042a03_0ca4_4869_9da7_6291e52c98e8_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
