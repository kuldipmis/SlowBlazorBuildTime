@using Telerik.Blazor.Components;
@if (_8cdd1bb6_68c6_4e2e_ae6e_2c239c75758e_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _8cdd1bb6_68c6_4e2e_ae6e_2c239c75758e_buttonVisibilityTest = !_8cdd1bb6_68c6_4e2e_ae6e_2c239c75758e_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _174382a2_b30e_4df9_aadf_dbf903057fbc_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _174382a2_b30e_4df9_aadf_dbf903057fbc_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _174382a2_b30e_4df9_aadf_dbf903057fbc_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_97be57dd_f0ed_4dc6_97ed_de473b6bcec2_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_cb908de0_4410_400a_b3af_97d78154e642_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _cb908de0_4410_400a_b3af_97d78154e642_buttonVisibilityTest = !_cb908de0_4410_400a_b3af_97d78154e642_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_d315b9e8_7a34_4dea_8e7c_9808d8f1bed9_Text())
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
		</tr>
	</table>
</a>
<a href="#">
	@(GetAnchor_25597425_1274_41f0_b339_2e412ce686d0_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6257c44f_fcf6_4fc2_9407_7f8940817779_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
	</tr>
</table>
@code { 
	private bool _8cdd1bb6_68c6_4e2e_ae6e_2c239c75758e_buttonVisibilityTest;
	private bool _cb908de0_4410_400a_b3af_97d78154e642_buttonVisibilityTest;
	private string _174382a2_b30e_4df9_aadf_dbf903057fbc_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _97be57dd_f0ed_4dc6_97ed_de473b6bcec2_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_d315b9e8_7a34_4dea_8e7c_9808d8f1bed9_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_25597425_1274_41f0_b339_2e412ce686d0_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _6257c44f_fcf6_4fc2_9407_7f8940817779_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
