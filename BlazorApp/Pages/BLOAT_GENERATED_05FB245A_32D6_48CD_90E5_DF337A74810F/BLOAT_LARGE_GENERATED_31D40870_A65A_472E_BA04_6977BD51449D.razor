@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_dd8c1714_0d7a_4727_adf3_a4a0dde223eb_Text())
	<button>
		This is a test button! 
	</button>
</a>
<a href="#">
	@(GetAnchor_7742cd15_91fa_4e0c_9239_63634320f69c_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_0f9b127f_ae29_49e4_a920_d115c421d07f_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _53eee7b2_d210_4568_bf8b_562be88df9df_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_2872a2e0_796f_42c1_a290_7ea0cac814a9_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_c2342689_8c22_4568_8019_39c266b2e79f_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_96ccbc44_2bb4_47f0_a273_0a2efdd020e8_GridOnRead"> 
	<GridColumns> 
		@if (_822cab57_fb5c_4e2b_a090_44068bb1cf1e_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _822cab57_fb5c_4e2b_a090_44068bb1cf1e_buttonVisibilityTest = !_822cab57_fb5c_4e2b_a090_44068bb1cf1e_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_88577eda_907e_4660_b26c_a3816f618719_Class())">
	<p>This div is a test!</p>
</div>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _e54d94ab_56b2_4e0a_b2a8_41f8c4f7fcba_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
@code { 
	private bool _822cab57_fb5c_4e2b_a090_44068bb1cf1e_buttonVisibilityTest;
	private string GetAnchor_dd8c1714_0d7a_4727_adf3_a4a0dde223eb_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_7742cd15_91fa_4e0c_9239_63634320f69c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _0f9b127f_ae29_49e4_a920_d115c421d07f_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _53eee7b2_d210_4568_bf8b_562be88df9df_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_2872a2e0_796f_42c1_a290_7ea0cac814a9_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_c2342689_8c22_4568_8019_39c266b2e79f_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _96ccbc44_2bb4_47f0_a273_0a2efdd020e8_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_88577eda_907e_4660_b26c_a3816f618719_Class()
	{
		return "alert alert-info";
	}
	private string _e54d94ab_56b2_4e0a_b2a8_41f8c4f7fcba_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
