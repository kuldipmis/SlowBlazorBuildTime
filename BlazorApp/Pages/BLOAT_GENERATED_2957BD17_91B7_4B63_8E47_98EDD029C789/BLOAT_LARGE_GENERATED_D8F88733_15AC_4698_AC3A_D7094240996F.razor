@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_9b9cec33_bf96_4694_9839_6e1fa22a0140_Text())
	<button>
		This is a test button! 
	</button>
</a>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_502e3058_b088_4746_a007_0e6fc3e6f550_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_217c0386_e072_4f88_822c_4b01f6aeb1c5_Class())">
	<p>This div is a test!</p>
</div>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d3122a3a_e349_423e_af93_6464c8af5d2b_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fa22350b_4842_4098_b7d1_62d732fe2ab5_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_78db727d_96dd_445f_83b9_be3362d4da2c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _3cd63dce_a950_4295_83cf_4989b21997e5_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _3cd63dce_a950_4295_83cf_4989b21997e5_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _3cd63dce_a950_4295_83cf_4989b21997e5_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _3cd63dce_a950_4295_83cf_4989b21997e5_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	<div class="@(Get_ba7d1d3d_3a1f_4532_8405_f895e9ce5e19_Class())">
		<p>This div is a test!</p>
	</div>
</button>
<div class="@(Get_86e4a898_5079_4116_96f0_fb0835beb590_Class())">
	<p>This div is a test!</p>
</div>
@code { 

	private string GetAnchor_9b9cec33_bf96_4694_9839_6e1fa22a0140_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _502e3058_b088_4746_a007_0e6fc3e6f550_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_217c0386_e072_4f88_822c_4b01f6aeb1c5_Class()
	{
		return "alert alert-info";
	}
	private void _fa22350b_4842_4098_b7d1_62d732fe2ab5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _d3122a3a_e349_423e_af93_6464c8af5d2b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _78db727d_96dd_445f_83b9_be3362d4da2c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _3cd63dce_a950_4295_83cf_4989b21997e5_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_ba7d1d3d_3a1f_4532_8405_f895e9ce5e19_Class()
	{
		return "alert alert-info";
	}
	private string Get_86e4a898_5079_4116_96f0_fb0835beb590_Class()
	{
		return "alert alert-info";
	}
} 
