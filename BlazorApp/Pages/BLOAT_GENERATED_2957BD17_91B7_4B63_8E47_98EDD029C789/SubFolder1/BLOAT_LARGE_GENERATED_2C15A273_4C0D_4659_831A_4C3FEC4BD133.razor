@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_242f0cc4_4985_42f6_aa38_e5d791b845a8_Text())
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _58b857a4_98ed_4de1_9c34_efbb975b1d0d_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _58b857a4_98ed_4de1_9c34_efbb975b1d0d_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
	</TelerikTabStrip> 
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _6c50490b_56d1_49ef_a218_28ca6c2aea81_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _6c50490b_56d1_49ef_a218_28ca6c2aea81_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d5c174c7_f7e2_4723_860f_974b9a8b4432_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_aa0a9564_8907_4cf0_b7c7_f0b7c16f8a09_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _aa0a9564_8907_4cf0_b7c7_f0b7c16f8a09_buttonVisibilityTest = !_aa0a9564_8907_4cf0_b7c7_f0b7c16f8a09_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_87266478_d434_41e7_9e73_7ee7eb2d9532_Class())">
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_15e34551_190f_43f0_a96e_c6d14e732f5c_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</div>
@code { 
	private bool _aa0a9564_8907_4cf0_b7c7_f0b7c16f8a09_buttonVisibilityTest;
	private string _58b857a4_98ed_4de1_9c34_efbb975b1d0d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_242f0cc4_4985_42f6_aa38_e5d791b845a8_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _6c50490b_56d1_49ef_a218_28ca6c2aea81_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _d5c174c7_f7e2_4723_860f_974b9a8b4432_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _15e34551_190f_43f0_a96e_c6d14e732f5c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_87266478_d434_41e7_9e73_7ee7eb2d9532_Class()
	{
		return "alert alert-info";
	}
} 
