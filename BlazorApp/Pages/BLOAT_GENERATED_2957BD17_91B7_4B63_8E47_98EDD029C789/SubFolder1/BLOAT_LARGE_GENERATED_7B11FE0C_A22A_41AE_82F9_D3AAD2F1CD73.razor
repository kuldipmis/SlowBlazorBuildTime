@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2e8e6acb_5927_4fd8_bc9c_761339972c9a_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_f8483634_71de_4f71_9d9b_dea1a1c0a436_Text())
</a>
@if (_637e8dcd_0e66_4f9b_ae77_726c41e81d0c_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _637e8dcd_0e66_4f9b_ae77_726c41e81d0c_buttonVisibilityTest = !_637e8dcd_0e66_4f9b_ae77_726c41e81d0c_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col1Row5
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
	</tr>
</table>
@if (_0dd64ebc_9825_4f58_9033_54a5bafb47ef_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _0dd64ebc_9825_4f58_9033_54a5bafb47ef_buttonVisibilityTest = !_0dd64ebc_9825_4f58_9033_54a5bafb47ef_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_33f0c8e6_48af_4a50_8104_478e474d97c1_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _33f0c8e6_48af_4a50_8104_478e474d97c1_buttonVisibilityTest = !_33f0c8e6_48af_4a50_8104_478e474d97c1_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6d7065c4_ec7f_49e6_8230_9ad91e56d0ef_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _09f26dc2_40b1_4e34_baef_93d4c61729d0_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		<a href="#">
			@(GetAnchor_1acc4fce_40fc_413d_b6b2_860879a2c613_Text())
			<button>
				This is a test button! 
			</button>
		</a>
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _09f26dc2_40b1_4e34_baef_93d4c61729d0_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _09f26dc2_40b1_4e34_baef_93d4c61729d0_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_83f4e896_8309_4426_adc8_21ec089d26fb_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _83f4e896_8309_4426_adc8_21ec089d26fb_buttonVisibilityTest = !_83f4e896_8309_4426_adc8_21ec089d26fb_buttonVisibilityTest"> 
		<a href="#">
			@(GetAnchor_80b9aa80_9fe6_4a40_b5bf_2e081c9052ee_Text())
		</a>
	</TelerikButton> 
}
@code { 
	private bool _637e8dcd_0e66_4f9b_ae77_726c41e81d0c_buttonVisibilityTest;
	private bool _0dd64ebc_9825_4f58_9033_54a5bafb47ef_buttonVisibilityTest;
	private bool _33f0c8e6_48af_4a50_8104_478e474d97c1_buttonVisibilityTest;
	private bool _83f4e896_8309_4426_adc8_21ec089d26fb_buttonVisibilityTest;
	private void _2e8e6acb_5927_4fd8_bc9c_761339972c9a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_f8483634_71de_4f71_9d9b_dea1a1c0a436_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _6d7065c4_ec7f_49e6_8230_9ad91e56d0ef_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_1acc4fce_40fc_413d_b6b2_860879a2c613_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _09f26dc2_40b1_4e34_baef_93d4c61729d0_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_80b9aa80_9fe6_4a40_b5bf_2e081c9052ee_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
