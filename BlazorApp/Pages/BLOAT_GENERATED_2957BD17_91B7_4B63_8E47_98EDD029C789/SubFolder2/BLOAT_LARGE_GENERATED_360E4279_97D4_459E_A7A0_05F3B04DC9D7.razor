@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
		<td>
			Col5Row5
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2aed038f_881b_4590_9a3e_19c9e8cbb938_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_3886ae10_9f83_41fa_9f29_be0c6471eb9e_Class())">
	<button>
		This is a test button! 
	</button>
</div>
<button>
	This is a test button! 
</button>
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_ca7755dc_4f19_44e6_b56d_77828e2fe55c_Text())
</a>
@if (_f2427c98_a5ca_48bc_bd27_f30cae096c85_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f2427c98_a5ca_48bc_bd27_f30cae096c85_buttonVisibilityTest = !_f2427c98_a5ca_48bc_bd27_f30cae096c85_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	This is a test button! 
</button>
<button>
	This is a test button! 
</button>
@if (_d1cd8ddb_ff21_41fa_9f5c_1ce15b24fafb_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d1cd8ddb_ff21_41fa_9f5c_1ce15b24fafb_buttonVisibilityTest = !_d1cd8ddb_ff21_41fa_9f5c_1ce15b24fafb_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_6d88ca43_6f88_474f_b0d8_82013bf6e82d_Text())
</a>
@code { 
	private bool _f2427c98_a5ca_48bc_bd27_f30cae096c85_buttonVisibilityTest;
	private bool _d1cd8ddb_ff21_41fa_9f5c_1ce15b24fafb_buttonVisibilityTest;
	private void _2aed038f_881b_4590_9a3e_19c9e8cbb938_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_3886ae10_9f83_41fa_9f29_be0c6471eb9e_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_ca7755dc_4f19_44e6_b56d_77828e2fe55c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_6d88ca43_6f88_474f_b0d8_82013bf6e82d_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
