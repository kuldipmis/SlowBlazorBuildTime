@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<button>
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_961d7fc1_1662_485c_aba4_6562de08c398_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _245daa44_7a8e_4970_8342_b68ccc969f17_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _245daa44_7a8e_4970_8342_b68ccc969f17_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_02df26b8_4865_4e38_a495_a455d7ab375a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_7ea06f21_4b53_4b25_8ed4_78390c8ef1ad_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _7ea06f21_4b53_4b25_8ed4_78390c8ef1ad_buttonVisibilityTest = !_7ea06f21_4b53_4b25_8ed4_78390c8ef1ad_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _7ea06f21_4b53_4b25_8ed4_78390c8ef1ad_buttonVisibilityTest;
	private void _961d7fc1_1662_485c_aba4_6562de08c398_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _245daa44_7a8e_4970_8342_b68ccc969f17_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _02df26b8_4865_4e38_a495_a455d7ab375a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
