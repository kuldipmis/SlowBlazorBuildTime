@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_47f76333_f7f1_4a0c_b917_ebefee552ea5_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_10963946_85f7_4d3c_91fa_ba216c024770_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _5940b3d6_6f62_4322_b811_726c4c536fad_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _06f4bf1d_d9aa_4fc0_a700_92f6559fcd2d_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _06f4bf1d_d9aa_4fc0_a700_92f6559fcd2d_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_a7b96804_b162_4d1f_8b96_f569ea9f3cad_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _a7b96804_b162_4d1f_8b96_f569ea9f3cad_buttonVisibilityTest = !_a7b96804_b162_4d1f_8b96_f569ea9f3cad_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_2e4f763b_eab7_4525_866b_e0f058afefac_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c894aff6_bdbd_48c0_b1c2_160b3400e482_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_31b80113_a91b_424d_b914_11be43c31323_Text())
</a>
<a href="#">
	@(GetAnchor_3dfd8be6_67c0_490e_a945_a2f0bdb6955e_Text())
</a>
<a href="#">
	@(GetAnchor_73d6c0c6_301d_4b16_82ac_62994bec39a7_Text())
</a>
@code { 
	private bool _a7b96804_b162_4d1f_8b96_f569ea9f3cad_buttonVisibilityTest;
	private void _10963946_85f7_4d3c_91fa_ba216c024770_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _47f76333_f7f1_4a0c_b917_ebefee552ea5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _227b1416_a6db_4cc0_bc8a_02642df79a73_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _5940b3d6_6f62_4322_b811_726c4c536fad_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _06f4bf1d_d9aa_4fc0_a700_92f6559fcd2d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_2e4f763b_eab7_4525_866b_e0f058afefac_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _c894aff6_bdbd_48c0_b1c2_160b3400e482_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_31b80113_a91b_424d_b914_11be43c31323_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_3dfd8be6_67c0_490e_a945_a2f0bdb6955e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_73d6c0c6_301d_4b16_82ac_62994bec39a7_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
