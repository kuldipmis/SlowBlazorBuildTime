@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
	</tr>
</table>
@if (_b5d00168_85c2_42f1_96bf_c1327aa90518_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _b5d00168_85c2_42f1_96bf_c1327aa90518_buttonVisibilityTest = !_b5d00168_85c2_42f1_96bf_c1327aa90518_buttonVisibilityTest"> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip2Data = _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData(); }
				@tabStrip2Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip3Data = _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData(); }
				@tabStrip3Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip4Data = _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData(); }
				@tabStrip4Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</TelerikButton> 
}
<button>
	This is a test button! 
</button>
@if (_43db0c17_6f9d_462b_ba9c_63180df0dc0e_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _43db0c17_6f9d_462b_ba9c_63180df0dc0e_buttonVisibilityTest = !_43db0c17_6f9d_462b_ba9c_63180df0dc0e_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	<a href="#">
		@(GetAnchor_59a8db53_9a3b_42f5_9bd8_ff30ffa2c117_Text())
	</a>
</button>
<button>
	This is a test button! 
</button>
@if (_8a27b304_5093_40c4_8b68_bad8dfc466bc_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _8a27b304_5093_40c4_8b68_bad8dfc466bc_buttonVisibilityTest = !_8a27b304_5093_40c4_8b68_bad8dfc466bc_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	<a href="#">
		@(GetAnchor_0013d5f3_98d1_4233_9371_83817c306565_Text())
	</a>
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f61e4b16_277d_4baf_89b6_a76e6e1b0ac0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d44d3fe4_9c54_4eba_bd14_2f4304bbec81_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _b5d00168_85c2_42f1_96bf_c1327aa90518_buttonVisibilityTest;
	private bool _43db0c17_6f9d_462b_ba9c_63180df0dc0e_buttonVisibilityTest;
	private bool _8a27b304_5093_40c4_8b68_bad8dfc466bc_buttonVisibilityTest;
	private string _dfd089ec_fcd6_4186_ab4a_41bfa03ede40_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_59a8db53_9a3b_42f5_9bd8_ff30ffa2c117_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_0013d5f3_98d1_4233_9371_83817c306565_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _f61e4b16_277d_4baf_89b6_a76e6e1b0ac0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _d44d3fe4_9c54_4eba_bd14_2f4304bbec81_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
