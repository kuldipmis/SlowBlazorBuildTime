@using Telerik.Blazor.Components;
<div class="@(Get_956a32de_1a02_4d96_b6c8_caa9530bb075_Class())">
	<p>This div is a test!</p>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e3d43643_3ae0_40d0_8dba_6932ede497bf_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_0cea6356_ff50_4ba0_bf15_589be606d65c_Text())
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_bee27da9_301b_41e9_84ac_a52ca2de331a_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
	</tr>
</table>
@if (_32149322_11b1_42f3_a9fa_91887f66c3a6_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _32149322_11b1_42f3_a9fa_91887f66c3a6_buttonVisibilityTest = !_32149322_11b1_42f3_a9fa_91887f66c3a6_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_793be03b_b3f9_4985_85ae_8ab2e4ac865d_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_ebdca3e7_4a4a_41bd_9a50_b6cf6fa4ff96_Text())
</a>
@code { 
	private bool _32149322_11b1_42f3_a9fa_91887f66c3a6_buttonVisibilityTest;
	private string Get_956a32de_1a02_4d96_b6c8_caa9530bb075_Class()
	{
		return "alert alert-info";
	}
	private void _e3d43643_3ae0_40d0_8dba_6932ede497bf_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _bee27da9_301b_41e9_84ac_a52ca2de331a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_0cea6356_ff50_4ba0_bf15_589be606d65c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_793be03b_b3f9_4985_85ae_8ab2e4ac865d_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_ebdca3e7_4a4a_41bd_9a50_b6cf6fa4ff96_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
