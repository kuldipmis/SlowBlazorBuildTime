@using Telerik.Blazor.Components;
@if (_18f564ef_2968_43f9_a4cf_e860b0eee82f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _18f564ef_2968_43f9_a4cf_e860b0eee82f_buttonVisibilityTest = !_18f564ef_2968_43f9_a4cf_e860b0eee82f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _8b5fa9ac_9c0b_4e8a_a782_b34eef2431d7_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _8b5fa9ac_9c0b_4e8a_a782_b34eef2431d7_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _8b5fa9ac_9c0b_4e8a_a782_b34eef2431d7_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _8b5fa9ac_9c0b_4e8a_a782_b34eef2431d7_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_078f0840_ff24_4f2e_bd07_83bdf83ad542_Text())
	<a href="#">
		@(GetAnchor_e13a6631_4ae7_47e0_bd17_b45cb670c9f1_Text())
	</a>
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_3c7f5c4a_9838_4f1f_ae22_96f0b0f5bc80_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _18f564ef_2968_43f9_a4cf_e860b0eee82f_buttonVisibilityTest;
	private string _8b5fa9ac_9c0b_4e8a_a782_b34eef2431d7_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_e13a6631_4ae7_47e0_bd17_b45cb670c9f1_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_078f0840_ff24_4f2e_bd07_83bdf83ad542_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _3c7f5c4a_9838_4f1f_ae22_96f0b0f5bc80_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
