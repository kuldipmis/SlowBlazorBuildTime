@using Telerik.Blazor.Components;
@if (_3693ebad_ab2e_4a8d_b7e0_b83b56a08e41_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _3693ebad_ab2e_4a8d_b7e0_b83b56a08e41_buttonVisibilityTest = !_3693ebad_ab2e_4a8d_b7e0_b83b56a08e41_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_aca31951_d3a8_42c2_8f93_d5b28a4132f0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_7b36c0cd_4b0f_4290_b479_17b7ab287e38_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_7ad7d427_8c93_40bd_b96a_aae2ae6fa163_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_c7b01c1a_4a07_4b85_8532_9bcd2b519443_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c7b01c1a_4a07_4b85_8532_9bcd2b519443_buttonVisibilityTest = !_c7b01c1a_4a07_4b85_8532_9bcd2b519443_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_8b279683_0afe_415c_bdbd_4dea74e9b65c_Text())
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _08651a2c_af69_42ea_ad84_575383599a74_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _08651a2c_af69_42ea_ad84_575383599a74_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
	</TelerikTabStrip> 
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_d92d5f99_3c2e_4eed_84ca_7a3a7b2383e5_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
@code { 
	private bool _3693ebad_ab2e_4a8d_b7e0_b83b56a08e41_buttonVisibilityTest;
	private bool _c7b01c1a_4a07_4b85_8532_9bcd2b519443_buttonVisibilityTest;
	private void _aca31951_d3a8_42c2_8f93_d5b28a4132f0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _7b36c0cd_4b0f_4290_b479_17b7ab287e38_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _7ad7d427_8c93_40bd_b96a_aae2ae6fa163_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _08651a2c_af69_42ea_ad84_575383599a74_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_8b279683_0afe_415c_bdbd_4dea74e9b65c_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _d92d5f99_3c2e_4eed_84ca_7a3a7b2383e5_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
