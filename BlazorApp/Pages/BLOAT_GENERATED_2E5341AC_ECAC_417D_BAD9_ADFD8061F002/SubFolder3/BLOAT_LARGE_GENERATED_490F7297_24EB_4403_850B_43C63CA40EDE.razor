@using Telerik.Blazor.Components;
<div class="@(Get_0bd46103_1d49_47c8_bb26_808583ad6956_Class())">
	<p>This div is a test!</p>
</div>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_73785509_2d93_497d_996f_e407aecc1062_GridOnRead"> 
	<GridColumns> 
		<a href="#">
			@(GetAnchor_c27ad33b_bb55_45ed_ad8e_4d9f9d3cb276_Text())
		</a>
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_08f89ef1_43d6_406e_84b6_c2e41e2e74a9_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _67ab2bd7_611d_43da_8643_9d09f863838a_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _6144e738_8045_4111_9c53_3c74b54bcba2_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _6144e738_8045_4111_9c53_3c74b54bcba2_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _6144e738_8045_4111_9c53_3c74b54bcba2_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _6144e738_8045_4111_9c53_3c74b54bcba2_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_df317b36_74ba_4375_81ee_cad105dba8ca_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _df317b36_74ba_4375_81ee_cad105dba8ca_buttonVisibilityTest = !_df317b36_74ba_4375_81ee_cad105dba8ca_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_64a4d361_deef_40a5_b57e_d367e80a0d2c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _df317b36_74ba_4375_81ee_cad105dba8ca_buttonVisibilityTest;
	private string Get_0bd46103_1d49_47c8_bb26_808583ad6956_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_c27ad33b_bb55_45ed_ad8e_4d9f9d3cb276_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _73785509_2d93_497d_996f_e407aecc1062_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _67ab2bd7_611d_43da_8643_9d09f863838a_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _08f89ef1_43d6_406e_84b6_c2e41e2e74a9_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _6144e738_8045_4111_9c53_3c74b54bcba2_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _64a4d361_deef_40a5_b57e_d367e80a0d2c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
