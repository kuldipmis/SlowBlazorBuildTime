@using Telerik.Blazor.Components;
@if (_f2586f35_e3f1_4cf1_91ba_6c514790329d_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f2586f35_e3f1_4cf1_91ba_6c514790329d_buttonVisibilityTest = !_f2586f35_e3f1_4cf1_91ba_6c514790329d_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_3f5d89a3_b7d7_43aa_bf19_07782bda9c53_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _3f5d89a3_b7d7_43aa_bf19_07782bda9c53_buttonVisibilityTest = !_3f5d89a3_b7d7_43aa_bf19_07782bda9c53_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _ac0534ac_1bea_45f3_8a8a_8ab7d3fa8735_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _ac0534ac_1bea_45f3_8a8a_8ab7d3fa8735_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _ac0534ac_1bea_45f3_8a8a_8ab7d3fa8735_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2134fdb5_a977_4c77_9ff5_fd1b1912ab42_GridOnRead"> 
	<GridColumns> 
		<div class="@(Get_fa0f0ac6_1d92_4931_ab33_e9c06860b727_Class())">
			<p>This div is a test!</p>
		</div>
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
		<td>
			Col3Row5
		</td>
		<td>
			Col4Row5
		</td>
		<td>
			Col5Row5
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
	</tr>
</table>
@code { 
	private bool _f2586f35_e3f1_4cf1_91ba_6c514790329d_buttonVisibilityTest;
	private bool _3f5d89a3_b7d7_43aa_bf19_07782bda9c53_buttonVisibilityTest;
	private string _ac0534ac_1bea_45f3_8a8a_8ab7d3fa8735_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_fa0f0ac6_1d92_4931_ab33_e9c06860b727_Class()
	{
		return "alert alert-info";
	}
	private void _2134fdb5_a977_4c77_9ff5_fd1b1912ab42_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
