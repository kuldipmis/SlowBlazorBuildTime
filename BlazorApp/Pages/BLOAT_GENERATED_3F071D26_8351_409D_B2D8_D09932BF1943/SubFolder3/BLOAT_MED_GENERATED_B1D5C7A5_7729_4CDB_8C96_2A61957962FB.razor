@using Telerik.Blazor.Components;
@if (_305e2823_90ef_4ee9_88b5_b3608eaa746f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _305e2823_90ef_4ee9_88b5_b3608eaa746f_buttonVisibilityTest = !_305e2823_90ef_4ee9_88b5_b3608eaa746f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_a3fb879c_b188_4abf_acdc_f71fb9581a4e_Text())
</a>
@if (_d2ad285f_4b3f_456d_b6a7_84ede934f7a5_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d2ad285f_4b3f_456d_b6a7_84ede934f7a5_buttonVisibilityTest = !_d2ad285f_4b3f_456d_b6a7_84ede934f7a5_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b8b3cece_53d4_44f0_ba76_7d3fe320dd44_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _305e2823_90ef_4ee9_88b5_b3608eaa746f_buttonVisibilityTest;
	private bool _d2ad285f_4b3f_456d_b6a7_84ede934f7a5_buttonVisibilityTest;
	private string _90decce4_07ab_4257_bc9d_f89566c94e1d_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_a3fb879c_b188_4abf_acdc_f71fb9581a4e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _b8b3cece_53d4_44f0_ba76_7d3fe320dd44_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
