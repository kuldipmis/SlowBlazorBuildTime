@using Telerik.Blazor.Components;
@if (_2a79e12d_b429_4e2c_835e_6f5a0a660b66_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _2a79e12d_b429_4e2c_835e_6f5a0a660b66_buttonVisibilityTest = !_2a79e12d_b429_4e2c_835e_6f5a0a660b66_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	<button>
		This is a test button! 
	</button>
</button>
@if (_7fdf1ff7_a2d6_4001_8b21_ee66c5f4bb2a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _7fdf1ff7_a2d6_4001_8b21_ee66c5f4bb2a_buttonVisibilityTest = !_7fdf1ff7_a2d6_4001_8b21_ee66c5f4bb2a_buttonVisibilityTest"> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a32967ec_b175_4a2a_ac16_eb0b5ca5d578_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_900a57dc_cdd9_4102_80a1_3943164b8baa_GridOnRead"> 
	<GridColumns> 
		<a href="#">
			@(GetAnchor_48ff90a2_dc26_411f_91b2_55e68e6f8f1b_Text())
		</a>
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_3922a199_8f73_41b4_9697_df737aa940ec_Text())
</a>
@code { 
	private bool _2a79e12d_b429_4e2c_835e_6f5a0a660b66_buttonVisibilityTest;
	private bool _7fdf1ff7_a2d6_4001_8b21_ee66c5f4bb2a_buttonVisibilityTest;
	private void _a32967ec_b175_4a2a_ac16_eb0b5ca5d578_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_48ff90a2_dc26_411f_91b2_55e68e6f8f1b_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _900a57dc_cdd9_4102_80a1_3943164b8baa_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_3922a199_8f73_41b4_9697_df737aa940ec_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
