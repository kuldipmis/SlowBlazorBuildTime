@using Telerik.Blazor.Components;
@if (_08704b92_788e_4f29_b710_d37a387b5673_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _08704b92_788e_4f29_b710_d37a387b5673_buttonVisibilityTest = !_08704b92_788e_4f29_b710_d37a387b5673_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
	</tr>
</table>
@if (_66bc8699_fefe_4b1e_a64b_bf5f13afe24d_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _66bc8699_fefe_4b1e_a64b_bf5f13afe24d_buttonVisibilityTest = !_66bc8699_fefe_4b1e_a64b_bf5f13afe24d_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4e26dc79_7941_4daf_ab13_afd182bcdb8c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_27e67d77_e22e_4ca8_b24c_6cf6f8f15f50_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _08704b92_788e_4f29_b710_d37a387b5673_buttonVisibilityTest;
	private bool _66bc8699_fefe_4b1e_a64b_bf5f13afe24d_buttonVisibilityTest;
	private void _4e26dc79_7941_4daf_ab13_afd182bcdb8c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _27e67d77_e22e_4ca8_b24c_6cf6f8f15f50_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
