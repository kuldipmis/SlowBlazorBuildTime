@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5343a9b3_f9a5_470b_80b1_45d1844d542e_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0d9ebdee_38ec_4989_970e_7ca0e1a0bb0e_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_c3d7f4a8_6f94_4432_9a77_17901c81a594_Text())
</a>
<button>
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _90a47938_2a5e_43d6_a881_c5e1ae84ad05_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
	</TelerikTabStrip> 
</button>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_56233736_14a8_4d97_9b54_14025ed24168_GridOnRead"> 
	<GridColumns> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
				<th>
					Test Header 4
				</th>
				<th>
					Test Header 5
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col4Row1
				</td>
				<td>
					Col5Row1
				</td>
			</tr>
		</table>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _c7b62122_e7ca_4996_8375_9cd95380bd91_buttonVisibilityTest;
	private void _5343a9b3_f9a5_470b_80b1_45d1844d542e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _0d9ebdee_38ec_4989_970e_7ca0e1a0bb0e_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_c3d7f4a8_6f94_4432_9a77_17901c81a594_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _90a47938_2a5e_43d6_a881_c5e1ae84ad05_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _56233736_14a8_4d97_9b54_14025ed24168_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
