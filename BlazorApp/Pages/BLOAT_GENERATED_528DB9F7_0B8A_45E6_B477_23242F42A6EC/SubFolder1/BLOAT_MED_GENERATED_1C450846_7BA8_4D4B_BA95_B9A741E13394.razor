@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a85b4278_2c54_4267_ab00_7616da6a55ad_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_706c758c_310d_4f2b_af1d_84b7c8dc3aed_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_7bec7910_4319_43c5_b6a5_d16184b9f58e_Class())">
	<p>This div is a test!</p>
</div>
@if (_fbd7a644_ce06_47cc_90ee_18684a23c843_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _fbd7a644_ce06_47cc_90ee_18684a23c843_buttonVisibilityTest = !_fbd7a644_ce06_47cc_90ee_18684a23c843_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2734fa9e_093b_47c7_af19_911b393bdccb_GridOnRead"> 
	<GridColumns> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _44f831cd_3778_4420_9371_b1d3024f9298_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _fbd7a644_ce06_47cc_90ee_18684a23c843_buttonVisibilityTest;
	private void _a85b4278_2c54_4267_ab00_7616da6a55ad_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _706c758c_310d_4f2b_af1d_84b7c8dc3aed_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_7bec7910_4319_43c5_b6a5_d16184b9f58e_Class()
	{
		return "alert alert-info";
	}
	private string _ec1b7ce7_ae3b_4ab0_b2c5_3adfb53f2f5a_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _44f831cd_3778_4420_9371_b1d3024f9298_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _2734fa9e_093b_47c7_af19_911b393bdccb_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
