@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_69a0686d_1b48_4012_bf66_a25428aaf60a_Text())
</a>
<button>
	This is a test button! 
</button>
<a href="#">
	@(GetAnchor_67c20567_787e_4825_8790_38240aa2ef8d_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_727968e4_6527_40ba_91fc_4ae68d13d4f8_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_0c430981_709e_4c7c_9a95_be86d2ba841b_Text())
</a>
@code { 

	private string GetAnchor_69a0686d_1b48_4012_bf66_a25428aaf60a_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_67c20567_787e_4825_8790_38240aa2ef8d_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _727968e4_6527_40ba_91fc_4ae68d13d4f8_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_0c430981_709e_4c7c_9a95_be86d2ba841b_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
