@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fd1f06e0_af6a_44ae_866f_60ca77318b0a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_67fbe05c_c856_4927_9791_f675f9b4e061_GridOnRead"> 
	<GridColumns> 
		@if (_4aa22d6a_c409_4086_8932_ee59d1fdbf15_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _4aa22d6a_c409_4086_8932_ee59d1fdbf15_buttonVisibilityTest = !_4aa22d6a_c409_4086_8932_ee59d1fdbf15_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</GridColumns> 
</TelerikGrid> 
@if (_36149a2a_570c_4a09_9bfe_2ee0401161e3_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _36149a2a_570c_4a09_9bfe_2ee0401161e3_buttonVisibilityTest = !_36149a2a_570c_4a09_9bfe_2ee0401161e3_buttonVisibilityTest"> 
		@if (_cd07fefd_520f_497a_86e8_0057f70e17be_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _cd07fefd_520f_497a_86e8_0057f70e17be_buttonVisibilityTest = !_cd07fefd_520f_497a_86e8_0057f70e17be_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</TelerikButton> 
}
@code { 
	private bool _4aa22d6a_c409_4086_8932_ee59d1fdbf15_buttonVisibilityTest;
	private bool _cd07fefd_520f_497a_86e8_0057f70e17be_buttonVisibilityTest;
	private bool _36149a2a_570c_4a09_9bfe_2ee0401161e3_buttonVisibilityTest;
	private void _fd1f06e0_af6a_44ae_866f_60ca77318b0a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _67fbe05c_c856_4927_9791_f675f9b4e061_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
