@using Telerik.Blazor.Components;
<div class="@(Get_34f042a9_e26c_4c7b_92af_cdc948859499_Class())">
	<p>This div is a test!</p>
</div>
<button>
	This is a test button! 
</button>
@if (_301a67fc_bf30_4314_94ba_d9eaf5c34716_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _301a67fc_bf30_4314_94ba_d9eaf5c34716_buttonVisibilityTest = !_301a67fc_bf30_4314_94ba_d9eaf5c34716_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_d4e7d186_b266_40e0_a64d_f6480bf24523_Text())
</a>
@if (_57c3563d_fcab_4f7c_afbe_123a7cc3e992_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _57c3563d_fcab_4f7c_afbe_123a7cc3e992_buttonVisibilityTest = !_57c3563d_fcab_4f7c_afbe_123a7cc3e992_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_359880d5_3a14_4dc0_b273_064c2eca87de_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
	</tr>
</table>
@code { 
	private bool _301a67fc_bf30_4314_94ba_d9eaf5c34716_buttonVisibilityTest;
	private bool _57c3563d_fcab_4f7c_afbe_123a7cc3e992_buttonVisibilityTest;
	private string Get_34f042a9_e26c_4c7b_92af_cdc948859499_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_d4e7d186_b266_40e0_a64d_f6480bf24523_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _359880d5_3a14_4dc0_b273_064c2eca87de_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
