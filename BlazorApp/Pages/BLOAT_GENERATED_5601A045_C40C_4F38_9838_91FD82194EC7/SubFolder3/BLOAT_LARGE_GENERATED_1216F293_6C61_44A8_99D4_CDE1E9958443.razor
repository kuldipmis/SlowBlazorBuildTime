@using Telerik.Blazor.Components;
@if (_89c01656_fb77_4d3a_962b_9eeb91e2a4ed_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _89c01656_fb77_4d3a_962b_9eeb91e2a4ed_buttonVisibilityTest = !_89c01656_fb77_4d3a_962b_9eeb91e2a4ed_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c41e4501_2a1b_429a_8be7_5bfc154212a2_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_05590a7c_0157_4ba3_bb1b_2354643c6745_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_186311f3_112d_4431_a292_f9d428382e86_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_80186412_3f79_4a88_861b_f144181bc17f_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_32be1fec_6dcf_4075_8e38_a621eec8b0c7_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _32be1fec_6dcf_4075_8e38_a621eec8b0c7_buttonVisibilityTest = !_32be1fec_6dcf_4075_8e38_a621eec8b0c7_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@if (_10559af2_c75b_4724_b3e0_8a8100923dc7_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _10559af2_c75b_4724_b3e0_8a8100923dc7_buttonVisibilityTest = !_10559af2_c75b_4724_b3e0_8a8100923dc7_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _1224ad09_1fa2_4526_b5f7_5bcc02c8e640_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
@code { 
	private bool _89c01656_fb77_4d3a_962b_9eeb91e2a4ed_buttonVisibilityTest;
	private bool _32be1fec_6dcf_4075_8e38_a621eec8b0c7_buttonVisibilityTest;
	private bool _10559af2_c75b_4724_b3e0_8a8100923dc7_buttonVisibilityTest;
	private void _c41e4501_2a1b_429a_8be7_5bfc154212a2_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_05590a7c_0157_4ba3_bb1b_2354643c6745_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_186311f3_112d_4431_a292_f9d428382e86_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _80186412_3f79_4a88_861b_f144181bc17f_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _1224ad09_1fa2_4526_b5f7_5bcc02c8e640_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
