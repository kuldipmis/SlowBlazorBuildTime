@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2f2bbf4c_4e89_49f9_a5f7_9b6471949896_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_411cec74_6690_4310_9572_0b94171a867a_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _f915e682_c5ef_49eb_9b9b_3f3dff7ac16a_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _f915e682_c5ef_49eb_9b9b_3f3dff7ac16a_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _f915e682_c5ef_49eb_9b9b_3f3dff7ac16a_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_4d052d1c_edff_4508_b6c1_1a1d79eea203_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _4d052d1c_edff_4508_b6c1_1a1d79eea203_buttonVisibilityTest = !_4d052d1c_edff_4508_b6c1_1a1d79eea203_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e6607b15_42a1_4651_9cd7_2cd159cb7f0e_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _4d052d1c_edff_4508_b6c1_1a1d79eea203_buttonVisibilityTest;
	private void _2f2bbf4c_4e89_49f9_a5f7_9b6471949896_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_411cec74_6690_4310_9572_0b94171a867a_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _f915e682_c5ef_49eb_9b9b_3f3dff7ac16a_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _e6607b15_42a1_4651_9cd7_2cd159cb7f0e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
