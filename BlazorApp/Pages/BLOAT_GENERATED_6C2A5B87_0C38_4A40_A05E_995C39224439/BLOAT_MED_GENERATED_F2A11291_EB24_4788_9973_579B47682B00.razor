@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a01abba9_e5e3_4fc3_b5ad_e5f44e1bb3b0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_b44ae382_6ef4_42cf_aca9_fa9fc66947e3_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_b2604e21_c0e2_49e6_b48a_f2eb813fc7eb_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2c991f13_e475_4dd7_a0ab_e1ad60d3cf81_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2c991f13_e475_4dd7_a0ab_e1ad60d3cf81_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _2c991f13_e475_4dd7_a0ab_e1ad60d3cf81_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_6c547cbe_d846_4a21_a49c_44f28ecba511_Class())">
	<p>This div is a test!</p>
</div>
<button>
	<TelerikTabStrip> 
		<TabStripTab> 
			@{ var tabStrip0Data = _5eb3c074_897f_4226_9934_e88e4cd16892_GetTabStripData(); }
			@tabStrip0Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip1Data = _5eb3c074_897f_4226_9934_e88e4cd16892_GetTabStripData(); }
			@tabStrip1Data
		</TabStripTab> 
		<TabStripTab> 
			@{ var tabStrip2Data = _5eb3c074_897f_4226_9934_e88e4cd16892_GetTabStripData(); }
			@tabStrip2Data
		</TabStripTab> 
	</TelerikTabStrip> 
</button>
@if (_aff22281_065a_4555_bd77_6877046c3316_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _aff22281_065a_4555_bd77_6877046c3316_buttonVisibilityTest = !_aff22281_065a_4555_bd77_6877046c3316_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _aff22281_065a_4555_bd77_6877046c3316_buttonVisibilityTest;
	private void _a01abba9_e5e3_4fc3_b5ad_e5f44e1bb3b0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_b44ae382_6ef4_42cf_aca9_fa9fc66947e3_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_b2604e21_c0e2_49e6_b48a_f2eb813fc7eb_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _2c991f13_e475_4dd7_a0ab_e1ad60d3cf81_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_6c547cbe_d846_4a21_a49c_44f28ecba511_Class()
	{
		return "alert alert-info";
	}
	private string _5eb3c074_897f_4226_9934_e88e4cd16892_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
