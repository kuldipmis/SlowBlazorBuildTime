@using Telerik.Blazor.Components;
<div class="@(Get_eb888459_42a7_4940_8113_5beef57d780b_Class())">
	@if (_760078fd_317e_4d5e_8901_3691e9b2346d_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _760078fd_317e_4d5e_8901_3691e9b2346d_buttonVisibilityTest = !_760078fd_317e_4d5e_8901_3691e9b2346d_buttonVisibilityTest"> 
			This is a test button! 
		</TelerikButton> 
	}
</div>
@if (_8dcd34db_f630_4218_b710_4da47b9bd384_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _8dcd34db_f630_4218_b710_4da47b9bd384_buttonVisibilityTest = !_8dcd34db_f630_4218_b710_4da47b9bd384_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_dacbc48d_9d89_4828_bf87_81f60f0fee24_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_cd161184_8b73_41fd_bd02_60a838e415ec_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
@if (_de98c101_fb1b_4591_a2ef_6c424213904f_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _de98c101_fb1b_4591_a2ef_6c424213904f_buttonVisibilityTest = !_de98c101_fb1b_4591_a2ef_6c424213904f_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_66e6107a_0e1b_4bf5_818e_163a629d0748_GridOnRead"> 
	<GridColumns> 
		<button>
			This is a test button! 
		</button>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _760078fd_317e_4d5e_8901_3691e9b2346d_buttonVisibilityTest;
	private bool _8dcd34db_f630_4218_b710_4da47b9bd384_buttonVisibilityTest;
	private bool _de98c101_fb1b_4591_a2ef_6c424213904f_buttonVisibilityTest;
	private string Get_eb888459_42a7_4940_8113_5beef57d780b_Class()
	{
		return "alert alert-info";
	}
	private void _cd161184_8b73_41fd_bd02_60a838e415ec_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _dacbc48d_9d89_4828_bf87_81f60f0fee24_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _66e6107a_0e1b_4bf5_818e_163a629d0748_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
