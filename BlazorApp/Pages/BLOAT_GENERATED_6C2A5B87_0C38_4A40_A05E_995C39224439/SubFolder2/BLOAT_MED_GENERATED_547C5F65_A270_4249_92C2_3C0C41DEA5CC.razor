@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b607efd0_d3bb_4a1f_bc51_cd65f81f86df_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<button>
	<a href="#">
		@(GetAnchor_d3d51095_c0be_4a23_9b2b_65a678b7724d_Text())
		@if (_c63e00c4_fe28_4f31_a41d_bf727252487b_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _c63e00c4_fe28_4f31_a41d_bf727252487b_buttonVisibilityTest = !_c63e00c4_fe28_4f31_a41d_bf727252487b_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</a>
</button>
@code { 
	private bool _c63e00c4_fe28_4f31_a41d_bf727252487b_buttonVisibilityTest;
	private void _b607efd0_d3bb_4a1f_bc51_cd65f81f86df_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_d3d51095_c0be_4a23_9b2b_65a678b7724d_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
