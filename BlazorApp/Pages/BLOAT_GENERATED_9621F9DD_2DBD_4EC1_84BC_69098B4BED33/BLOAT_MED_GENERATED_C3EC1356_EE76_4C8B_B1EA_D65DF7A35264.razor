@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_52585ebe_229c_4f72_991a_857ad8486048_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_2e7f4596_3ceb_4793_bd82_30f3a4313718_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _2e7f4596_3ceb_4793_bd82_30f3a4313718_buttonVisibilityTest = !_2e7f4596_3ceb_4793_bd82_30f3a4313718_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_47045206_0e16_403f_a9c7_27a194d44a4b_Text())
</a>
@if (_f8d9d8c3_c86d_4680_b556_1f79d05c83d0_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _f8d9d8c3_c86d_4680_b556_1f79d05c83d0_buttonVisibilityTest = !_f8d9d8c3_c86d_4680_b556_1f79d05c83d0_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b5ffce4d_7cc3_470f_a1b1_bfb51c0c0bab_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _2e7f4596_3ceb_4793_bd82_30f3a4313718_buttonVisibilityTest;
	private bool _f8d9d8c3_c86d_4680_b556_1f79d05c83d0_buttonVisibilityTest;
	private void _52585ebe_229c_4f72_991a_857ad8486048_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_47045206_0e16_403f_a9c7_27a194d44a4b_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _b5ffce4d_7cc3_470f_a1b1_bfb51c0c0bab_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
