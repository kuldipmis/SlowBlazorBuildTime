@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_25e49a71_b5c8_4994_9683_fc6c0822a673_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6db7ea33_e16f_4df3_ad3d_7e0cd65d8644_GridOnRead"> 
	<GridColumns> 
		<a href="#">
			@(GetAnchor_ec63a91c_5f6e_41fc_b890_ad4e13193b5a_Text())
		</a>
	</GridColumns> 
</TelerikGrid> 
<button>
	<table>
		<tr>
			<th>
				Test Header 1
			</th>
			<th>
				Test Header 2
			</th>
			<th>
				Test Header 3
			</th>
			<th>
				Test Header 4
			</th>
		</tr>
		<tr>
			<td>
				Col1Row1
			</td>
			<td>
				Col2Row1
			</td>
			<td>
				Col3Row1
			</td>
			<td>
				Col4Row1
			</td>
			<td>
				Col1Row2
			</td>
			<td>
				Col2Row2
			</td>
			<td>
				Col3Row2
			</td>
			<td>
				Col4Row2
			</td>
			<td>
				Col1Row3
			</td>
			<td>
				Col2Row3
			</td>
			<td>
				Col3Row3
			</td>
			<td>
				Col4Row3
			</td>
			<td>
				Col1Row4
			</td>
			<td>
				Col2Row4
			</td>
			<td>
				Col3Row4
			</td>
			<td>
				Col4Row4
			</td>
			<td>
				Col1Row5
			</td>
			<td>
				Col2Row5
			</td>
			<td>
				Col3Row5
			</td>
			<td>
				Col4Row5
			</td>
		</tr>
	</table>
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2e977d7f_950a_49b8_b2a5_23a29b5e82c0_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2e977d7f_950a_49b8_b2a5_23a29b5e82c0_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 

	private void _25e49a71_b5c8_4994_9683_fc6c0822a673_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_ec63a91c_5f6e_41fc_b890_ad4e13193b5a_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _6db7ea33_e16f_4df3_ad3d_7e0cd65d8644_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _2e977d7f_950a_49b8_b2a5_23a29b5e82c0_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
