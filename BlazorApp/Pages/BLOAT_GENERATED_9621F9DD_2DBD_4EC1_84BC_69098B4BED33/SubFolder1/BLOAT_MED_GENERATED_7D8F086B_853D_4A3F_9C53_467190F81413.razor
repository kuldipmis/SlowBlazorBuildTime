@using Telerik.Blazor.Components;
@if (_5c9fa534_208b_49d0_a55e_57f0fb0c4fc7_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _5c9fa534_208b_49d0_a55e_57f0fb0c4fc7_buttonVisibilityTest = !_5c9fa534_208b_49d0_a55e_57f0fb0c4fc7_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_db4016d2_9fc8_4d9b_b300_717d0a470a92_Text())
</a>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fe683b4d_70a6_44fd_bea7_4cc2ba8d724e_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fe683b4d_70a6_44fd_bea7_4cc2ba8d724e_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fe683b4d_70a6_44fd_bea7_4cc2ba8d724e_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
		<td>
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fe683b4d_70a6_44fd_bea7_4cc2ba8d724e_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</td>
	</tr>
</table>
@if (_d1a2b7cd_04b6_4920_acaa_9510e819d4e3_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _d1a2b7cd_04b6_4920_acaa_9510e819d4e3_buttonVisibilityTest = !_d1a2b7cd_04b6_4920_acaa_9510e819d4e3_buttonVisibilityTest"> 
		<table>
			<tr>
				<th>
					Test Header 1
				</th>
				<th>
					Test Header 2
				</th>
				<th>
					Test Header 3
				</th>
			</tr>
			<tr>
				<td>
					Col1Row1
				</td>
				<td>
					Col2Row1
				</td>
				<td>
					Col3Row1
				</td>
				<td>
					Col1Row2
				</td>
				<td>
					Col2Row2
				</td>
				<td>
					Col3Row2
				</td>
				<td>
					Col1Row3
				</td>
				<td>
					Col2Row3
				</td>
				<td>
					Col3Row3
				</td>
				<td>
					Col1Row4
				</td>
				<td>
					Col2Row4
				</td>
				<td>
					Col3Row4
				</td>
				<td>
					Col1Row5
				</td>
				<td>
					Col2Row5
				</td>
				<td>
					Col3Row5
				</td>
			</tr>
		</table>
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _9d9e5e03_b896_4299_aec3_b74e8758a199_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _9d9e5e03_b896_4299_aec3_b74e8758a199_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _5c9fa534_208b_49d0_a55e_57f0fb0c4fc7_buttonVisibilityTest;
	private bool _d1a2b7cd_04b6_4920_acaa_9510e819d4e3_buttonVisibilityTest;
	private string GetAnchor_db4016d2_9fc8_4d9b_b300_717d0a470a92_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _fe683b4d_70a6_44fd_bea7_4cc2ba8d724e_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _9d9e5e03_b896_4299_aec3_b74e8758a199_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
