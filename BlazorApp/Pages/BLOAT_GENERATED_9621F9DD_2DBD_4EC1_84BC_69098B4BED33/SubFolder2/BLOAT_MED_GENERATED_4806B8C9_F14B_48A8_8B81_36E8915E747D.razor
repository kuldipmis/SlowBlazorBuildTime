@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_93c97166_5d6b_4836_86d7_302efba50918_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_5a618e73_1638_4db1_b288_89cdff5a6d29_Text())
</a>
@if (_a2d9450e_fc70_449c_a24d_a0353b9c7708_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _a2d9450e_fc70_449c_a24d_a0353b9c7708_buttonVisibilityTest = !_a2d9450e_fc70_449c_a24d_a0353b9c7708_buttonVisibilityTest"> 
		<button>
			This is a test button! 
		</button>
	</TelerikButton> 
}
@code { 
	private bool _a2d9450e_fc70_449c_a24d_a0353b9c7708_buttonVisibilityTest;
	private void _93c97166_5d6b_4836_86d7_302efba50918_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_5a618e73_1638_4db1_b288_89cdff5a6d29_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
