@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2edc8f2c_c832_46ea_be98_e325c59b7013_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<button>
	This is a test button! 
</button>
@if (_414ce06d_8e58_4b18_b1d0_b78540edec50_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _414ce06d_8e58_4b18_b1d0_b78540edec50_buttonVisibilityTest = !_414ce06d_8e58_4b18_b1d0_b78540edec50_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_6b515745_2b68_4f69_8e79_e3705672169b_Text())
</a>
@code { 
	private bool _414ce06d_8e58_4b18_b1d0_b78540edec50_buttonVisibilityTest;
	private void _2edc8f2c_c832_46ea_be98_e325c59b7013_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_6b515745_2b68_4f69_8e79_e3705672169b_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
