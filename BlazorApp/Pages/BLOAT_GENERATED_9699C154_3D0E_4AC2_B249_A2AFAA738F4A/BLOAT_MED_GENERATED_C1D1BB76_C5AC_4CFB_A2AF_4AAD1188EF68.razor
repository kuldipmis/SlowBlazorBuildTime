@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0bfa5e2b_1b95_44c4_b6fe_c41f9427408f_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _0bfa5e2b_1b95_44c4_b6fe_c41f9427408f_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _0bfa5e2b_1b95_44c4_b6fe_c41f9427408f_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		<TelerikTabStrip> 
			<TabStripTab> 
				@{ var tabStrip0Data = _cb86f2bf_af60_4d4f_9ffc_1299dbce4b5f_GetTabStripData(); }
				@tabStrip0Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip1Data = _cb86f2bf_af60_4d4f_9ffc_1299dbce4b5f_GetTabStripData(); }
				@tabStrip1Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip2Data = _cb86f2bf_af60_4d4f_9ffc_1299dbce4b5f_GetTabStripData(); }
				@tabStrip2Data
			</TabStripTab> 
			<TabStripTab> 
				@{ var tabStrip3Data = _cb86f2bf_af60_4d4f_9ffc_1299dbce4b5f_GetTabStripData(); }
				@tabStrip3Data
			</TabStripTab> 
		</TelerikTabStrip> 
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
	</tr>
</table>
<div class="@(Get_55ea3ecb_accd_4691_8a4c_6bfb992964cd_Class())">
	<p>This div is a test!</p>
</div>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fb57dd71_8d29_496c_a3fc_30a1ab1e26aa_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 

	private string _cb86f2bf_af60_4d4f_9ffc_1299dbce4b5f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _0bfa5e2b_1b95_44c4_b6fe_c41f9427408f_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_55ea3ecb_accd_4691_8a4c_6bfb992964cd_Class()
	{
		return "alert alert-info";
	}
	private void _fb57dd71_8d29_496c_a3fc_30a1ab1e26aa_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
