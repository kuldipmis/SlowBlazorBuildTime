@using Telerik.Blazor.Components;
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<div class="@(Get_0be173db_e2bd_4e4f_b941_2a81583b89db_Class())">
	<p>This div is a test!</p>
</div>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_6c4ad41c_ec92_4f83_ab38_ce6cbe7df8fc_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			<a href="#">
				@(GetAnchor_871bc22a_a552_461a_bfaa_c3003e86748d_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_871bc22a_a552_461a_bfaa_c3003e86748d_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_871bc22a_a552_461a_bfaa_c3003e86748d_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_871bc22a_a552_461a_bfaa_c3003e86748d_Text())
			</a>
		</td>
	</tr>
</table>
@code { 

	private string _0852f7fe_639e_4837_bf18_9325e770b7ce_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string Get_0be173db_e2bd_4e4f_b941_2a81583b89db_Class()
	{
		return "alert alert-info";
	}
	private void _6c4ad41c_ec92_4f83_ab38_ce6cbe7df8fc_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_871bc22a_a552_461a_bfaa_c3003e86748d_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
