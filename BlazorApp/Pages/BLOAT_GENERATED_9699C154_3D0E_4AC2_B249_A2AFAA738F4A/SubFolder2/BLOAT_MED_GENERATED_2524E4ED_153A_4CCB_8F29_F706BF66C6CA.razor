@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
	</tr>
</table>
@if (_151a3c72_bcfc_4225_bee0_d416accd4304_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _151a3c72_bcfc_4225_bee0_d416accd4304_buttonVisibilityTest = !_151a3c72_bcfc_4225_bee0_d416accd4304_buttonVisibilityTest"> 
		<div class="@(Get_7f003625_0139_4448_a40c_784c5b257254_Class())">
			<a href="#">
				@(GetAnchor_5eff62b9_361f_43e0_987a_475b83a48021_Text())
			</a>
		</div>
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1cdbbccf_fcea_4fd0_bfbe_73a24bc44c59_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_8be7b0ec_ed4f_4126_8fd9_96666cb83bad_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1b411af3_0e32_4b46_809b_83e9f6e819be_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _151a3c72_bcfc_4225_bee0_d416accd4304_buttonVisibilityTest;
	private string GetAnchor_5eff62b9_361f_43e0_987a_475b83a48021_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_7f003625_0139_4448_a40c_784c5b257254_Class()
	{
		return "alert alert-info";
	}
	private string _d92605f2_99da_4222_87c5_d5152aa4322b_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _1cdbbccf_fcea_4fd0_bfbe_73a24bc44c59_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_8be7b0ec_ed4f_4126_8fd9_96666cb83bad_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _1b411af3_0e32_4b46_809b_83e9f6e819be_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
