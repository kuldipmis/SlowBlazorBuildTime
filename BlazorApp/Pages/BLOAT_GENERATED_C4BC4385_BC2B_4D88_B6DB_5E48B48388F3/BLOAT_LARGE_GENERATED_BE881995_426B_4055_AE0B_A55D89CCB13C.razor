@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_f6179cf5_fd47_4267_8d5e_f6833e1886ef_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_c4f6942c_c706_468c_b28c_96b4d067bea2_Text())
</a>
@if (_2c2cabee_ffb7_4a7b_bd1f_736667cc3325_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _2c2cabee_ffb7_4a7b_bd1f_736667cc3325_buttonVisibilityTest = !_2c2cabee_ffb7_4a7b_bd1f_736667cc3325_buttonVisibilityTest"> 
		@if (_9643b444_84d0_4385_9a26_d7b0857049c9_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _9643b444_84d0_4385_9a26_d7b0857049c9_buttonVisibilityTest = !_9643b444_84d0_4385_9a26_d7b0857049c9_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</TelerikButton> 
}
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _cd90b75c_1523_4112_9445_846e549ea0ff_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _cd90b75c_1523_4112_9445_846e549ea0ff_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _cd90b75c_1523_4112_9445_846e549ea0ff_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_e682b8cf_853c_4f84_9f05_c383125eff08_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a60174f4_40df_4598_95c4_17f7a8aa85e7_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _9643b444_84d0_4385_9a26_d7b0857049c9_buttonVisibilityTest;
	private bool _2c2cabee_ffb7_4a7b_bd1f_736667cc3325_buttonVisibilityTest;
	private void _f6179cf5_fd47_4267_8d5e_f6833e1886ef_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_c4f6942c_c706_468c_b28c_96b4d067bea2_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _cd90b75c_1523_4112_9445_846e549ea0ff_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_e682b8cf_853c_4f84_9f05_c383125eff08_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _a60174f4_40df_4598_95c4_17f7a8aa85e7_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
