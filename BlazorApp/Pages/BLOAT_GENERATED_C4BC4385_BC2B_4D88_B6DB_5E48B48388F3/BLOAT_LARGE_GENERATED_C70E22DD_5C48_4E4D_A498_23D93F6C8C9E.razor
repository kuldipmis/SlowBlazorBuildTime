@using Telerik.Blazor.Components;
<a href="#">
	@(GetAnchor_65ddc696_8adc_40da_ba8e_308925b1018d_Text())
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_19e27d1b_c63c_473a_ad1a_7bf0e0b35045_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</a>
<div class="@(Get_9cf69a1a_a07f_42ac_bd2d_b0b7b1e3691a_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_5eaf664d_3f39_46fd_b097_48109175bc98_Text())
</a>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_8563dd77_00e8_436c_9170_5732cd58b7ce_GridOnRead"> 
	<GridColumns> 
		@if (_4b6c696b_fb0d_4ab8_a9f5_7ab81a68417e_buttonVisibilityTest) 
		{
			<TelerikButton OnClick="() => _4b6c696b_fb0d_4ab8_a9f5_7ab81a68417e_buttonVisibilityTest = !_4b6c696b_fb0d_4ab8_a9f5_7ab81a68417e_buttonVisibilityTest"> 
				This is a test button! 
			</TelerikButton> 
		}
	</GridColumns> 
</TelerikGrid> 
@if (_31c1d35c_5661_4332_b263_6f6c093ee1c2_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _31c1d35c_5661_4332_b263_6f6c093ee1c2_buttonVisibilityTest = !_31c1d35c_5661_4332_b263_6f6c093ee1c2_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<button>
	This is a test button! 
</button>
@if (_40e44b13_1a30_40a8_9f86_85ba66de848a_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _40e44b13_1a30_40a8_9f86_85ba66de848a_buttonVisibilityTest = !_40e44b13_1a30_40a8_9f86_85ba66de848a_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_e110e7a6_709e_4811_b24d_87250acb7d56_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_03bb8ed6_4712_4787_a3ec_1addee2eb31c_GridOnRead"> 
			<GridColumns> 
				<a href="#">
					@(GetAnchor_da249c6b_b023_45bd_a0a4_d568fd3b3662_Text())
				</a>
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<button>
	This is a test button! 
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _cf75da25_de2b_4fe7_842e_908084c836ac_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _cf75da25_de2b_4fe7_842e_908084c836ac_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_5267f949_0b6e_4540_9af0_90f796c62a1c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_4cb2128b_1d45_4814_b7b8_e8f0677fe4de_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _4cb2128b_1d45_4814_b7b8_e8f0677fe4de_buttonVisibilityTest = !_4cb2128b_1d45_4814_b7b8_e8f0677fe4de_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
@code { 
	private bool _4b6c696b_fb0d_4ab8_a9f5_7ab81a68417e_buttonVisibilityTest;
	private bool _31c1d35c_5661_4332_b263_6f6c093ee1c2_buttonVisibilityTest;
	private bool _40e44b13_1a30_40a8_9f86_85ba66de848a_buttonVisibilityTest;
	private bool _4cb2128b_1d45_4814_b7b8_e8f0677fe4de_buttonVisibilityTest;
	private void _19e27d1b_c63c_473a_ad1a_7bf0e0b35045_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_65ddc696_8adc_40da_ba8e_308925b1018d_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_9cf69a1a_a07f_42ac_bd2d_b0b7b1e3691a_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_5eaf664d_3f39_46fd_b097_48109175bc98_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _8563dd77_00e8_436c_9170_5732cd58b7ce_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_da249c6b_b023_45bd_a0a4_d568fd3b3662_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _03bb8ed6_4712_4787_a3ec_1addee2eb31c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _e110e7a6_709e_4811_b24d_87250acb7d56_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _cf75da25_de2b_4fe7_842e_908084c836ac_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _5267f949_0b6e_4540_9af0_90f796c62a1c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
