@using Telerik.Blazor.Components;
@if (_953d8fca_0513_41f8_9dc3_cd66449d1ed0_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _953d8fca_0513_41f8_9dc3_cd66449d1ed0_buttonVisibilityTest = !_953d8fca_0513_41f8_9dc3_cd66449d1ed0_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_bae9847f_7d28_4d94_b84c_45a2894ec08f_Class())">
	<p>This div is a test!</p>
</div>
<div class="@(Get_2cea5e13_e7f1_4486_8cb4_2da0462e4ed7_Class())">
	<p>This div is a test!</p>
</div>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_40c88243_30ea_42ea_9c74_881b0513f67c_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_9fb02d12_bb9d_442e_8edc_9a58bbbca4d4_GridOnRead"> 
			<GridColumns> 
				<GridColumn Field="Item1" Title="TestColumn1"/> 
				<GridColumn Field="Item2" Title="TestColumn2"/> 
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_0f46fc85_14dd_48d4_9786_14045dff6135_GridOnRead"> 
	<GridColumns> 
		<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_a2aeb2c5_8732_46d1_8471_7724361fe761_GridOnRead"> 
			<GridColumns> 
				@if (_b1af29fc_19a1_416c_986d_1bc1364e6252_buttonVisibilityTest) 
				{
					<TelerikButton OnClick="() => _b1af29fc_19a1_416c_986d_1bc1364e6252_buttonVisibilityTest = !_b1af29fc_19a1_416c_986d_1bc1364e6252_buttonVisibilityTest"> 
						This is a test button! 
					</TelerikButton> 
				}
			</GridColumns> 
		</TelerikGrid> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_c78272bd_9fe3_4043_9401_171b1b8d473b_GridOnRead"> 
	<GridColumns> 
		<a href="#">
			@(GetAnchor_cd4128fb_badf_461b_b2ce_af0824378a32_Text())
		</a>
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _953d8fca_0513_41f8_9dc3_cd66449d1ed0_buttonVisibilityTest;
	private bool _b1af29fc_19a1_416c_986d_1bc1364e6252_buttonVisibilityTest;
	private string Get_bae9847f_7d28_4d94_b84c_45a2894ec08f_Class()
	{
		return "alert alert-info";
	}
	private string Get_2cea5e13_e7f1_4486_8cb4_2da0462e4ed7_Class()
	{
		return "alert alert-info";
	}
	private void _9fb02d12_bb9d_442e_8edc_9a58bbbca4d4_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _40c88243_30ea_42ea_9c74_881b0513f67c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _a2aeb2c5_8732_46d1_8471_7724361fe761_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _0f46fc85_14dd_48d4_9786_14045dff6135_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _e6f3ce58_aea6_4c40_afd7_03c0a313707e_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_cd4128fb_badf_461b_b2ce_af0824378a32_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _c78272bd_9fe3_4043_9401_171b1b8d473b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
