@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1c33615c_0fb4_49d8_98f6_075a6c690fea_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_26e45bf9_9c7e_46f8_82ed_a24f444e8cb3_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_bbc982b9_1070_49a9_b0e6_8c58e62a9dc1_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_eea2c914_9f65_40e1_9c51_3ea1c9b7c8cc_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _eea2c914_9f65_40e1_9c51_3ea1c9b7c8cc_buttonVisibilityTest = !_eea2c914_9f65_40e1_9c51_3ea1c9b7c8cc_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_889579c3_a93b_4c59_86d6_71435678b24d_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text())
			</a>
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_09d2f933_a30d_4b82_89b8_41963c89dbdb_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2fdf6107_0611_4538_9aca_725182c2689a_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2fdf6107_0611_4538_9aca_725182c2689a_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 
	private bool _eea2c914_9f65_40e1_9c51_3ea1c9b7c8cc_buttonVisibilityTest;
	private void _1c33615c_0fb4_49d8_98f6_075a6c690fea_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _26e45bf9_9c7e_46f8_82ed_a24f444e8cb3_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _bbc982b9_1070_49a9_b0e6_8c58e62a9dc1_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _889579c3_a93b_4c59_86d6_71435678b24d_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_35532327_021c_466a_831f_499fafbfb464_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _09d2f933_a30d_4b82_89b8_41963c89dbdb_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _2fdf6107_0611_4538_9aca_725182c2689a_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
