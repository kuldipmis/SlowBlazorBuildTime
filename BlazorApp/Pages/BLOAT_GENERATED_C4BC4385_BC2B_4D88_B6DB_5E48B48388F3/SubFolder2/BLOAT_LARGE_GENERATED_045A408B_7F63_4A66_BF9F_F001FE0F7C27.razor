@using Telerik.Blazor.Components;
<button>
	<a href="#">
		@(GetAnchor_36e3025d_dc5e_4c67_bdac_df3720397ad3_Text())
	</a>
</button>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@if (_8edaf6db_4820_45d0_b5f1_e769c99862b8_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _8edaf6db_4820_45d0_b5f1_e769c99862b8_buttonVisibilityTest = !_8edaf6db_4820_45d0_b5f1_e769c99862b8_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<a href="#">
	@(GetAnchor_eb15a81a_b05b_4cfa_a5b6_fc99cbf65443_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_4c37eaeb_bbf2_497c_ab46_8bc1cfd52bc0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<div class="@(Get_8f883caf_3e75_462c_a661_f458cbbed003_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_35660229_8893_42f1_a99f_da26af351d7a_Text())
</a>
@code { 
	private bool _8edaf6db_4820_45d0_b5f1_e769c99862b8_buttonVisibilityTest;
	private string GetAnchor_36e3025d_dc5e_4c67_bdac_df3720397ad3_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _2b43877a_c385_4e16_991d_baf04574cc6e_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_eb15a81a_b05b_4cfa_a5b6_fc99cbf65443_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _4c37eaeb_bbf2_497c_ab46_8bc1cfd52bc0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_8f883caf_3e75_462c_a661_f458cbbed003_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_35660229_8893_42f1_a99f_da26af351d7a_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
