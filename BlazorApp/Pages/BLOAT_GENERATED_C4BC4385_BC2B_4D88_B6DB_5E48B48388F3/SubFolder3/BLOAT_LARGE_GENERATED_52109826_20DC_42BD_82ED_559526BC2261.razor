@using Telerik.Blazor.Components;
<button>
	@if (_2bc4027a_0dc5_49b9_9b92_0263489832a1_buttonVisibilityTest) 
	{
		<TelerikButton OnClick="() => _2bc4027a_0dc5_49b9_9b92_0263489832a1_buttonVisibilityTest = !_2bc4027a_0dc5_49b9_9b92_0263489832a1_buttonVisibilityTest"> 
			<table>
				<tr>
					<th>
						Test Header 1
					</th>
					<th>
						Test Header 2
					</th>
					<th>
						Test Header 3
					</th>
					<th>
						Test Header 4
					</th>
				</tr>
				<tr>
					<td>
						Col1Row1
					</td>
					<td>
						Col2Row1
					</td>
					<td>
						Col3Row1
					</td>
					<td>
						Col4Row1
					</td>
					<td>
						Col1Row2
					</td>
					<td>
						Col2Row2
					</td>
					<td>
						Col3Row2
					</td>
					<td>
						Col4Row2
					</td>
					<td>
						Col1Row3
					</td>
					<td>
						Col2Row3
					</td>
					<td>
						Col3Row3
					</td>
					<td>
						Col4Row3
					</td>
				</tr>
			</table>
		</TelerikButton> 
	}
</button>
<button>
	This is a test button! 
</button>
<button>
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_10563f17_5e21_4194_b738_77304d85300b_GridOnRead"> 
		<GridColumns> 
			<GridColumn Field="Item1" Title="TestColumn1"/> 
			<GridColumn Field="Item2" Title="TestColumn2"/> 
		</GridColumns> 
	</TelerikGrid> 
</button>
@if (_c6980513_3030_4842_bdf5_c5a33e8f2073_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _c6980513_3030_4842_bdf5_c5a33e8f2073_buttonVisibilityTest = !_c6980513_3030_4842_bdf5_c5a33e8f2073_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<div class="@(Get_e043983d_6c35_49c6_8059_cd2b3ce25a21_Class())">
	<p>This div is a test!</p>
</div>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_b512fc61_1d44_45c6_b6c5_5ba2b45908c6_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<a href="#">
	@(GetAnchor_11ae364c_d72b_4e27_bf17_68ff5a2453cb_Text())
</a>
@code { 
	private bool _2bc4027a_0dc5_49b9_9b92_0263489832a1_buttonVisibilityTest;
	private bool _c6980513_3030_4842_bdf5_c5a33e8f2073_buttonVisibilityTest;
	private void _10563f17_5e21_4194_b738_77304d85300b_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_e043983d_6c35_49c6_8059_cd2b3ce25a21_Class()
	{
		return "alert alert-info";
	}
	private void _b512fc61_1d44_45c6_b6c5_5ba2b45908c6_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_11ae364c_d72b_4e27_bf17_68ff5a2453cb_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
