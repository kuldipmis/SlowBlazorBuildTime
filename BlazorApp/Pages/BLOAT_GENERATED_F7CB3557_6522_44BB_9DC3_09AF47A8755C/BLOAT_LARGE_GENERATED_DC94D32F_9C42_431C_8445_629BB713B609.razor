@using Telerik.Blazor.Components;
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_00299f70_1d02_423f_81d5_06819eec36f0_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<button>
	This is a test button! 
</button>
<div class="@(Get_0ecad295_59e9_4f5b_b61c_37bc05f676a8_Class())">
	<a href="#">
		@(GetAnchor_8869d8e4_d2d8_449a_930d_4366dd50eda1_Text())
	</a>
</div>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _c2daed2b_4578_4b83_8963_009ab2862054_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _c2daed2b_4578_4b83_8963_009ab2862054_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _c2daed2b_4578_4b83_8963_009ab2862054_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _c2daed2b_4578_4b83_8963_009ab2862054_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
@code { 

	private void _00299f70_1d02_423f_81d5_06819eec36f0_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_8869d8e4_d2d8_449a_930d_4366dd50eda1_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string Get_0ecad295_59e9_4f5b_b61c_37bc05f676a8_Class()
	{
		return "alert alert-info";
	}
	private string _c2daed2b_4578_4b83_8963_009ab2862054_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string _a36c8962_d80f_4057_84f0_946f140d66d0_GetTabStripData()
	{
		return "Tab strip content!";
	}
} 
