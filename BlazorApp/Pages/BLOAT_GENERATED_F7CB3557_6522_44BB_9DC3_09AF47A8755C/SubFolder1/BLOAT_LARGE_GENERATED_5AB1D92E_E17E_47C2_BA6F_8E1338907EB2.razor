@using Telerik.Blazor.Components;
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_629101b3_9999_4847_9687_2c23ab4bb8f4_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip4Data = _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData(); }
		@tabStrip4Data
	</TabStripTab> 
</TelerikTabStrip> 
<a href="#">
	@(GetAnchor_5e8cd778_92ab_42f1_95ff_d8b7df937552_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _71d0d4b6_7780_4937_942c_fbf31a893220_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _71d0d4b6_7780_4937_942c_fbf31a893220_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
</TelerikTabStrip> 
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_46949d0e_862b_4238_ba0d_773c36adb5a8_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 

	private void _629101b3_9999_4847_9687_2c23ab4bb8f4_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _bd50c4e0_6faa_49be_baf8_32b75b1778fa_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private string GetAnchor_5e8cd778_92ab_42f1_95ff_d8b7df937552_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _71d0d4b6_7780_4937_942c_fbf31a893220_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _46949d0e_862b_4238_ba0d_773c36adb5a8_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
