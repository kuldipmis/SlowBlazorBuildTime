@using Telerik.Blazor.Components;
<div class="@(Get_92ac6ca7_dbcb_4e9a_b58a_a9bef084a1d3_Class())">
	<p>This div is a test!</p>
</div>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _c4839444_fed0_440d_a404_bcbdcbac0a4a_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _c4839444_fed0_440d_a404_bcbdcbac0a4a_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _c4839444_fed0_440d_a404_bcbdcbac0a4a_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _c4839444_fed0_440d_a404_bcbdcbac0a4a_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
	</tr>
</table>
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
		<th>
			Test Header 5
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col5Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col5Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
		<td>
			Col5Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col3Row4
		</td>
		<td>
			Col4Row4
		</td>
		<td>
			Col5Row4
		</td>
	</tr>
</table>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_aef4db46_e24b_49eb_a906_75c5325ac72c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
		<td>
			<a href="#">
				@(GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text())
			</a>
		</td>
	</tr>
</table>
@if (_5c0de869_aac9_4f95_b441_6e545fe81aed_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _5c0de869_aac9_4f95_b441_6e545fe81aed_buttonVisibilityTest = !_5c0de869_aac9_4f95_b441_6e545fe81aed_buttonVisibilityTest"> 
		<a href="#">
			@(GetAnchor_4ac56b13_fe93_46e9_9f26_2708d058a5e8_Text())
		</a>
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col1Row5
		</td>
	</tr>
</table>
<button>
	This is a test button! 
</button>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_44012823_54ff_49cb_945b_7621492ff74c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@code { 
	private bool _5c0de869_aac9_4f95_b441_6e545fe81aed_buttonVisibilityTest;
	private string Get_92ac6ca7_dbcb_4e9a_b58a_a9bef084a1d3_Class()
	{
		return "alert alert-info";
	}
	private string _c4839444_fed0_440d_a404_bcbdcbac0a4a_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _aef4db46_e24b_49eb_a906_75c5325ac72c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string GetAnchor_705fb8eb_2eb0_4e7d_b0d9_01e7c18c095b_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string GetAnchor_4ac56b13_fe93_46e9_9f26_2708d058a5e8_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _44012823_54ff_49cb_945b_7621492ff74c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
