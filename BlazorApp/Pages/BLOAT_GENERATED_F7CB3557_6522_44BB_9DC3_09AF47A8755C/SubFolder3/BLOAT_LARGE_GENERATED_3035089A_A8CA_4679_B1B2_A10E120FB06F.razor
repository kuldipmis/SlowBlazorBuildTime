@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
	</tr>
</table>
@if (_b8685e20_64ed_4e75_a203_60c7783502cf_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _b8685e20_64ed_4e75_a203_60c7783502cf_buttonVisibilityTest = !_b8685e20_64ed_4e75_a203_60c7783502cf_buttonVisibilityTest"> 
		<div class="@(Get_6b577507_431a_4835_ad00_4dc0ec55e0b7_Class())">
			<button>
				<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_05fe1d5c_5a5a_4e99_b826_a37c69fa4045_GridOnRead"> 
					<GridColumns> 
						<GridColumn Field="Item1" Title="TestColumn1"/> 
						<GridColumn Field="Item2" Title="TestColumn2"/> 
					</GridColumns> 
				</TelerikGrid> 
			</button>
		</div>
	</TelerikButton> 
}
<div class="@(Get_0aba6bf5_c22c_4a13_8606_bf28edcb5c06_Class())">
	<p>This div is a test!</p>
</div>
<a href="#">
	@(GetAnchor_965ae692_10a1_4d6d_9c2d_86a954dee089_Text())
</a>
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _e42c0b74_1f14_4dad_a24f_79b91ae6af45_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _e42c0b74_1f14_4dad_a24f_79b91ae6af45_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _e42c0b74_1f14_4dad_a24f_79b91ae6af45_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _e42c0b74_1f14_4dad_a24f_79b91ae6af45_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_1cb25549_8fe7_40d7_a8bb_93f22594ab9a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_30635106_02a0_441a_b56a_643f7da1002a_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
@if (_b3de5bba_c46a_44d8_a165_0b6247dff6ee_buttonVisibilityTest) 
{
	<TelerikButton OnClick="() => _b3de5bba_c46a_44d8_a165_0b6247dff6ee_buttonVisibilityTest = !_b3de5bba_c46a_44d8_a165_0b6247dff6ee_buttonVisibilityTest"> 
		This is a test button! 
	</TelerikButton> 
}
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
		<th>
			Test Header 4
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
		<td>
			Col4Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col3Row2
		</td>
		<td>
			Col4Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col3Row3
		</td>
		<td>
			Col4Row3
		</td>
	</tr>
</table>
@code { 
	private bool _b8685e20_64ed_4e75_a203_60c7783502cf_buttonVisibilityTest;
	private bool _b3de5bba_c46a_44d8_a165_0b6247dff6ee_buttonVisibilityTest;
	private void _05fe1d5c_5a5a_4e99_b826_a37c69fa4045_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_6b577507_431a_4835_ad00_4dc0ec55e0b7_Class()
	{
		return "alert alert-info";
	}
	private string Get_0aba6bf5_c22c_4a13_8606_bf28edcb5c06_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_965ae692_10a1_4d6d_9c2d_86a954dee089_Text()
	{
		return "This Anchor element is a Test!";
	}
	private string _e42c0b74_1f14_4dad_a24f_79b91ae6af45_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _1cb25549_8fe7_40d7_a8bb_93f22594ab9a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _30635106_02a0_441a_b56a_643f7da1002a_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
} 
