@using Telerik.Blazor.Components;
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col1Row2
		</td>
		<td>
			Col2Row2
		</td>
		<td>
			Col1Row3
		</td>
		<td>
			Col2Row3
		</td>
		<td>
			Col1Row4
		</td>
		<td>
			Col2Row4
		</td>
		<td>
			Col1Row5
		</td>
		<td>
			Col2Row5
		</td>
	</tr>
</table>
<a href="#">
	@(GetAnchor_68d1fc64_1936_465d_8cad_027268fd5f6e_Text())
</a>
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_15431986_21ea_491e_b5be_c656823a3bed_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_237cdc90_852d_42eb_90b2_9c0c74a2a30c_GridOnRead"> 
	<GridColumns> 
		<GridColumn Field="Item1" Title="TestColumn1"/> 
		<GridColumn Field="Item2" Title="TestColumn2"/> 
	</GridColumns> 
</TelerikGrid> 
<TelerikTabStrip> 
	<TabStripTab> 
		@{ var tabStrip0Data = _9d33f521_09f0_434c_9b1f_b8c6db8aa8ed_GetTabStripData(); }
		@tabStrip0Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip1Data = _9d33f521_09f0_434c_9b1f_b8c6db8aa8ed_GetTabStripData(); }
		@tabStrip1Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip2Data = _9d33f521_09f0_434c_9b1f_b8c6db8aa8ed_GetTabStripData(); }
		@tabStrip2Data
	</TabStripTab> 
	<TabStripTab> 
		@{ var tabStrip3Data = _9d33f521_09f0_434c_9b1f_b8c6db8aa8ed_GetTabStripData(); }
		@tabStrip3Data
	</TabStripTab> 
</TelerikTabStrip> 
<table>
	<tr>
		<th>
			Test Header 1
		</th>
		<th>
			Test Header 2
		</th>
		<th>
			Test Header 3
		</th>
	</tr>
	<tr>
		<td>
			Col1Row1
		</td>
		<td>
			Col2Row1
		</td>
		<td>
			Col3Row1
		</td>
	</tr>
</table>
<div class="@(Get_0aead111_402e_46d7_809c_842e2fd7137e_Class())">
	<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_2ffd9ed2_dcb6_4c8b_817a_7a50ce426179_GridOnRead"> 
		<GridColumns> 
			<TelerikGrid Pageable="@true" Sortable="@true" TItem="Tuple<string, string>" OnRead="@_fc1b7682_cf56_43d4_b4db_879ee30ae3e7_GridOnRead"> 
				<GridColumns> 
					<GridColumn Field="Item1" Title="TestColumn1"/> 
					<GridColumn Field="Item2" Title="TestColumn2"/> 
				</GridColumns> 
			</TelerikGrid> 
		</GridColumns> 
	</TelerikGrid> 
</div>
<button>
	This is a test button! 
</button>
<button>
	<button>
		This is a test button! 
	</button>
</button>
<a href="#">
	@(GetAnchor_50b9042d_b4a2_4a7a_b82b_e1fd2c65f679_Text())
</a>
@code { 

	private string GetAnchor_68d1fc64_1936_465d_8cad_027268fd5f6e_Text()
	{
		return "This Anchor element is a Test!";
	}
	private void _15431986_21ea_491e_b5be_c656823a3bed_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _237cdc90_852d_42eb_90b2_9c0c74a2a30c_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string _9d33f521_09f0_434c_9b1f_b8c6db8aa8ed_GetTabStripData()
	{
		return "Tab strip content!";
	}
	private void _fc1b7682_cf56_43d4_b4db_879ee30ae3e7_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private void _2ffd9ed2_dcb6_4c8b_817a_7a50ce426179_GridOnRead(GridReadEventArgs args)
	{
		List<Tuple<string, string>> data = new()
		{
			new Tuple<string, string>("TestVal1", "TestVal2"),
			new Tuple<string, string>("TestVal3", "TestVal4"),
			new Tuple<string, string>("TestVal5", "TestVal6"),
			new Tuple<string, string>("TestVal7", "TestVal8")
		};
		args.Data = data;
		args.Total = data.Count;
	}
	private string Get_0aead111_402e_46d7_809c_842e2fd7137e_Class()
	{
		return "alert alert-info";
	}
	private string GetAnchor_50b9042d_b4a2_4a7a_b82b_e1fd2c65f679_Text()
	{
		return "This Anchor element is a Test!";
	}
} 
